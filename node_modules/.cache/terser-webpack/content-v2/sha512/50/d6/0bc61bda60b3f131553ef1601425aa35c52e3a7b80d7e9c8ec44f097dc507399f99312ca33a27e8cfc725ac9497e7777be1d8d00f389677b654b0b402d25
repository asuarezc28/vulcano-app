{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{mRf7:function(e,t,i){\"use strict\";i.r(t);var a=i(\"pO5D\"),r=(i(\"wSAH\"),i(\"srIe\")),n=i(\"6S2I\"),s=i(\"zqDF\"),o=i(\"WbKI\"),l=i(\"+opI\"),c=i(\"RI0u\"),u=i(\"r88o\"),h=i(\"04ZG\"),f=i(\"zlDU\"),d=i(\"4EHJ\"),p=(i(\"ju1D\"),i(\"9AIY\"),i(\"9MzC\")),m=i(\"SFah\"),y=i(\"pqNC\"),b=i(\"5pQd\"),g=i(\"IvSi\"),x=i(\"uRH/\"),O=i(\"ukD5\"),I=i(\"ofM5\"),w=i(\"mXvl\"),v=i(\"DbUH\"),j=i(\"jhcG\"),T=i(\"WmKv\"),R=i(\"9Ruv\"),S=i(\"Stxv\"),C=i(\"f4Nx\"),_=i(\"WZb1\"),M=i(\"OvF4\"),k=(i(\"4GrV\"),i(\"Lqtk\")),F=i(\"VLTf\"),P=i(\"3/ME\"),D=i(\"tidM\"),B=i(\"2mvb\"),N=i(\"HM2S\"),z=i(\"ciAr\");const H=n.a.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),L=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation=\"nearest\",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set(\"multidimensionalDefinition\",e)}set url(e){this._set(\"url\",Object(F.f)(e,H))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let a;this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:n}=this;return a=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),a}getTileUrl(e,t,i){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:\"\"}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(C.d)(e);return P.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,a={}){if(a.requestAsImageElement){const r=this.getTileUrl(e,t,i);return Object(k.default)(r,{responseType:\"image\",query:{sliceId:this._sliceId,_ts:a.timestamp},signal:a.signal}).then(e=>e.data)}return await this._initJobHandler(),this.multidimensionalDefinition&&(a={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...a}),\"raster-shaded-relief\"===this.renderer.type&&(a={buffer:{cols:1,rows:1},...a}),this.raster.fetchTile(e,t,i,a)}async fetchPixels(e,t,i,a){return await this._initJobHandler(),this.multidimensionalDefinition&&(a={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...a}),this.raster.fetchPixels(e,t,i,a)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new B.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(N.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set(\"interpolation\",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(r.h)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach(e=>{i.push(new D.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Object(N.b)(e)),this.renderer||(this.renderer=Object(N.a)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new z.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||H.warn(\"imagery-tile-mixin\",\"The given renderer is not supported by the layer.\")}};return Object(a.a)([Object(o.b)()],t.prototype,\"_cachedRendererJson\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"_sliceId\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"_compatibleFullExtent\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"_rasterJobHandler\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"bandIds\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"copyright\",void 0),Object(a.a)([Object(o.b)({type:M.a}),Object(S.a)(\"rasterInfo.extent\")],t.prototype,\"fullExtent\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"interpolation\",void 0),Object(a.a)([Object(o.b)({type:[D.a]})],t.prototype,\"multidimensionalDefinition\",null),Object(a.a)([Object(o.b)()],t.prototype,\"raster\",void 0),Object(a.a)([Object(o.b)({readOnly:!0}),Object(S.a)(\"raster.rasterInfo\")],t.prototype,\"rasterInfo\",void 0),Object(a.a)([Object(o.b)()],t.prototype,\"sourceJSON\",void 0),Object(a.a)([Object(o.b)({type:_.a}),Object(S.a)(\"rasterInfo.spatialReference\")],t.prototype,\"spatialReference\",void 0),Object(a.a)([Object(o.b)({type:P.a,dependsOn:[\"rasterInfo\"]}),Object(S.a)(\"rasterInfo.storageInfo.tileInfo\")],t.prototype,\"tileInfo\",void 0),Object(a.a)([Object(o.b)(g.j)],t.prototype,\"url\",null),Object(a.a)([Object(o.b)({types:O.a})],t.prototype,\"renderer\",null),Object(a.a)([Object(o.b)()],t.prototype,\"symbolizer\",void 0),t=Object(a.a)([Object(h.a)(\"esri.layers.ImageryTileMixin\")],t),t};var J=i(\"SuVq\"),A=i(\"8prj\"),E=i(\"pPNP\"),q=i(\"ag7Y\");let U=class extends q.a{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"blockWidth\",void 0),Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"blockHeight\",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],U.prototype,\"compression\",void 0),Object(a.a)([Object(o.b)({type:J.a,json:{write:!0}})],U.prototype,\"origin\",void 0),Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"firstPyramidLevel\",void 0),Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"maximumPyramidLevel\",void 0),Object(a.a)([Object(o.b)()],U.prototype,\"pyramidScalingFactor\",void 0),Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"pyramidBlockWidth\",void 0),Object(a.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,\"pyramidBlockHeight\",void 0),Object(a.a)([Object(o.b)({type:Boolean,json:{write:!0}})],U.prototype,\"isVirtualTileInfo\",void 0),Object(a.a)([Object(o.b)({json:{write:!0}})],U.prototype,\"tileInfo\",void 0),Object(a.a)([Object(o.b)()],U.prototype,\"blockBoundary\",void 0),U=Object(a.a)([Object(h.a)(\"esri.layers.support.RasterStorageInfo\")],U);var W=U,G=i(\"+rMe\"),V=i(\"FFFX\"),$=i(\"ne7T\"),Y=i(\"tODX\"),X=i(\"IYxN\");let K=class extends(Object(G.b)(q.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=Object(Y.c)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:P.a.create(),...e.ioConfig}}),e}set url(e){this._set(\"url\",Object(F.f)(e,n.a.getLogger(this.declaredClass)))}async open(e){throw new f.a(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,t,i,a={}){var n;const{tileInfo:s}=a,o=s.lodAt(e),l=new J.a({x:o.resolution,y:o.resolution,spatialReference:s.spatialReference}),c=this.getTileExtent(l,t,i,s);return null!=(n=a.multidimensionalDefinition)&&n.length&&Object(r.h)(this.rasterInfo.multidimensionalInfo)&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)||0}),this.fetchPixels(c,s.size[0],s.size[1],a)}async identify(e,t={}){const{spatialReference:i,extent:a}=this.rasterInfo,{datumTransformation:n}=t,s=Object(Y.e)(e,i,n);if(!a.intersects(s))return{location:s,value:null};let o=0;if(t.srcResolution)o=Object(Y.g)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=Object(X.d)(this.url,t.sliceId),p=`${o}/${c}/${u}`;let m=Object(X.c)(d,null,p);Object(r.h)(m)||(m=this.fetchRawTile(o,c,u,t),Object(X.e)(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const b=h*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!y.mask||y.mask[b]?y.pixels.map(e=>e[b]):null,pyramidLevel:o}}async fetchPixels(e,t,i,a={}){const n=e.clone().normalize(),s=this.rasterInfo.spatialReference,o=!(e=n[0]).spatialReference.equals(s),{datumTransformation:l}=a,c=new J.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=a.srcResolution||(o?Object(Y.f)(c,s,e,l):c);if(!u)return null;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=Object(Y.g)(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=o?Object(Y.d)(e,s,l):e;const y=Object(r.n)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const b={x:Math.floor((m.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-m.ymax)/f.y+.1)},g=Math.ceil((m.xmax-m.xmin)/f.x-.1),x=Math.ceil((m.ymax-m.ymin)/f.y-.1);if(g/t>8||x/i>8)return null;const O=await this.fetchRawPixels(h,b,{width:g,height:x},a);if(!O)return null;if(!o&&1===O.pixelBlocks.length&&(h>0?p.pyramidBlockWidth:p.blockWidth)===t&&(h>0?p.pyramidBlockHeight:p.blockHeight)===i&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:m,pixelBlock:O.pixelBlocks[0],transformGrid:null};const I=Object(Y.b)(e,O.extent,c,l,y);let w;const v=!a.requestRawData,j={rows:I.spacing[0],cols:I.spacing[1]},{pixelBlocks:T,mosaicSize:R,isPartiallyFilled:S}=O;if(this.rasterJobHandler)w=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:T,srcMosaicSize:R,destDimension:v?{width:t,height:i}:null,coefs:v?I.coefficients:null,sampleSpacing:v?j:null,interpolation:a.interpolation},a);else{const e=Object($.i)(T,R);w=v?Object($.a)(e,{width:t,height:i},I.coefficients,j,a.interpolation):e}return{srcExtent:m,pixelBlock:w,transformGrid:I,extent:e,isPartiallyFilled:S}}async fetchRawPixels(e,t,i,a){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:l,y:c}=t,{width:u,height:h}=i;a.buffer&&(l-=a.buffer.cols,c-=a.buffer.rows,u+=2*a.buffer.cols,h+=2*a.buffer.rows);const f=Math.floor(l/s),d=Math.floor(c/o),m=Math.floor((l+u-1)/s),y=Math.floor((c+h-1)/o),b=n[e];if(!b)return null;const{minRow:g,minCol:x,maxCol:O,maxRow:I}=b;if(y<g||m<x||d>I||f>O)return null;const w=[];let v,j=!1;for(let M=d;M<=y;M++)for(let t=f;t<=m;t++)M>=g&&t>=x&&I>=M&&O>=t?(v=this._fetchRawTile(e,M,t,a),this.ioConfig.allowPartialFill&&(v=Object(p.c)(e=>{v.then(t=>e(t)).catch(()=>{j=!0,e(null)})})),w.push(v)):w.push(null);if(0===w.length)return null;const T=await Object(p.b)(w),R={height:(y-d+1)*s,width:(m-f+1)*o},{nativePixelSize:S,spatialReference:C}=this.rasterInfo,_=S.x*Math.pow(2,e),k=S.y*Math.pow(2,e);return{extent:new M.a({xmin:r.x+f*s*_,xmax:r.x+(m+1)*s*_,ymin:r.y-(y+1)*o*k,ymax:r.y-d*o*k,spatialReference:C}),pixelBlocks:T,mosaicSize:R,isPartiallyFilled:j}}async fetchRawTile(e,t,i,a){throw new f.a(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return Object(Y.d)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(V.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var a,r;const{customFetchParameters:n}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(a=null!=(r=i)?r:t.retryCount)?a:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(k.default)(e,{...t,query:{...o,...n},headers:{...l,...c}})}catch(a){if(i>0)return i--,this.request(e,t,i);throw a}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(r.h)(t)||null==e||!e.length)return null;let i=0;const a=e[0].variableName;for(let r=0;r<t.variables.length;r++){const n=t.variables[r],s=n.dimensions;if(n.name!==a){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const a=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==a)return null;const r=Array.isArray(a.values[0])?a.values[0][0]:a.values[0],n=this._getIndexFromDimensions(r,s[t]);if(-1===n)return null;o.shift(),i+=t===l-1?n:n*o.reduce((e,t)=>e+t)}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:a}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let s=Math.max(a.x,a.y),o=1/.0254*96*s;for(let e=0;e<=n;e++)r.push({level:n-e,resolution:s,scale:o}),s*=2,o*=2;const l=new J.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new P.a({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,a){const{width:r,height:n,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new J.a({x:s.xmin,y:s.ymax,spatialReference:l});null==a&&(a=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const u=this._computeBlockBoundary(s,o,a,512,512);e.storageInfo=new W({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:a,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:a,pixelSize:r,extent:n}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,h=Object(Y.e)(e,a,i);if(!n.intersects(h))return null;if(t<0||t>l)return null;const f=Math.pow(c,t),d=(u.y-h.y)/(f*r.y)/o,p=(h.x-u.x)/(f*r.x)/s,m=Math.min(o-1,Math.floor((d-Math.floor(d))*o)),y=Math.min(s-1,Math.floor((p-Math.floor(p))*s));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:h}}getTileExtent(e,t,i,a){const{origin:r,spatialReference:n}=a,s=a.size[0],o=a.size[1],l=r.x+i*s*e.x,c=r.y-t*o*e.y;return new M.a({xmin:l,xmax:l+s*e.x,ymin:c-o*e.y,ymax:c,spatialReference:n})}_computeBlockBoundary(e,t,i,a,r){let{x:n,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*n)/a/n),maxCol:Math.floor((e.xmax-o-.1*n)/a/n),minRow:Math.floor((l-e.ymax+.1*s)/r/s),maxRow:Math.floor((l-e.ymin-.1*s)/r/s)}];if(i>0)for(let u=0;u<i;u++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*n)/a/n),maxCol:Math.floor((e.xmax-o-.1*n)/a/n),minRow:Math.floor((l-e.ymax+.1*s)/r/n),maxRow:Math.floor((l-e.ymin-.1*s)/r/n)});return c}_fetchRawTile(e,t,i,a){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Object(p.u)(null);const{minRow:s,minCol:o,maxCol:l,maxRow:c}=n;if(t<s||i<o||t>c||i>l)return Object(p.u)(null);const u=Object(X.d)(this.url,a.sliceId),h=`${e}/${t}/${i}`;let f=Object(X.c)(u,a.registryId,h);if(!Object(r.h)(f)){const r=Object(p.d)();f=this.fetchRawTile(e,t,i,{...a,signal:r.signal}),Object(X.e)(u,a.registryId,h,f,r),f.catch(()=>{Object(X.b)(u,a.registryId,h)})}return a.signal&&Object(p.r)(a,()=>{Object(X.a)(u,a.registryId,h)}),f}_getIndexFromDimensions(e,t){const{extent:i,interval:a,unit:r,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex(t=>t[0]<=e&&t[1]>=e):n.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if(\"ISO8601\"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||\"seconds\"){case\"seconds\":o=Math.round((e-s)/1e3/a);break;case\"minutes\":o=Math.round((e-s)/6e4/a);break;case\"hours\":o=Math.round((e-s)/36e5/a);break;case\"days\":o=Math.round((e-s)/864e5/a);break;case\"years\":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/a);break;case\"decades\":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/a)}return o}return Math.round((e-s)/a)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:a,values:r}=e;let n=(null==r?void 0:r.length)||0;if(n)return n;const s=t[0];if(0===n&&\"ISO8601\"===a){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||\"seconds\"){case\"seconds\":n=Math.round((t[1]-t[0])/1e3/i);break;case\"minutes\":n=Math.round((t[1]-t[0])/6e4/i);break;case\"hours\":n=Math.round((t[1]-t[0])/36e5/i);break;case\"days\":n=Math.round((t[1]-t[0])/864e5/i);break;case\"years\":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case\"decades\":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return n}return Math.round((t[1]-t[0])/i)}};Object(a.a)([Object(o.b)(g.j)],K.prototype,\"url\",null),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,\"datasetName\",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,\"datasetFormat\",void 0),Object(a.a)([Object(o.b)()],K.prototype,\"rasterInfo\",void 0),Object(a.a)([Object(o.b)()],K.prototype,\"ioConfig\",void 0),Object(a.a)([Object(o.b)()],K.prototype,\"sourceJSON\",void 0),K=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.BaseRaster\")],K);var Z=K,Q=i(\"dCrW\");const ee=new Map;ee.set(\"int16\",\"esriFieldTypeSmallInteger\"),ee.set(\"int32\",\"esriFieldTypeInteger\"),ee.set(\"int64\",\"esriFieldTypeInteger\"),ee.set(\"float32\",\"esriFieldTypeSingle\"),ee.set(\"float64\",\"esriFieldTypeDouble\"),ee.set(\"text\",\"esriFieldTypeString\");let te=class extends Z{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:t}=await this.request(this.url+\"/conf.json\",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new f.a(\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:i,rasterInfo:a}=this._parseHeader(t);if(\"thematic\"===a.dataType){const e=await this._fetchAuxiliaryInformation();a.attributeTable=e}this._set(\"storageInfo\",i),this._set(\"rasterInfo\",a),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,a={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const n=this._buildCacheFilePath(r,t,i,a.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:a.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(n,{range:{from:c.position,to:c.position+c.recordSize},responseType:\"array-buffer\",signal:a.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&\"RasterInfo\"===e.type&&![\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"].some(t=>!e[t])}_parseHeader(e){var t;const i=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:a,histograms:r,colormap:n,blockWidth:s,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),h=new _.a(e.extent.spatialReference||e.geodataXform.spatialReference),f=new M.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h}),d=new J.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),p=null!=(t=e.properties)?t:{},m=e.format.toLowerCase().replace(\"cache/\",\"\"),y=new J.a(e.origin.x,e.origin.y,h);let b,g,x,O;if(n&&n.colors)for(b=[],g=0;g<n.colors.length;g++)x=n.colors[g],O=n.values?n.values[g]:g,b.push([O,255&x,x<<16>>>24,x<<8>>>24,x>>>24]);const I=e.LODInfos,w=[];for(g=0;g<I.levels.length;g++)w.push({level:I.levels[g],resolution:I.resolutions[g],scale:96/.0254*I.resolutions[g]});const v=new P.a({dpi:96,lods:w,format:m,origin:y,size:[s,o],spatialReference:h}),j={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},T=Math.round((f.xmax-f.xmin)/d.x),R=Math.round((f.ymax-f.ymin)/d.y),S=[{maxCol:Math.ceil(T/s)-1,maxRow:Math.ceil(R/o)-1,minCol:0,minRow:0}];let C=2;if(c>0)for(g=0;g<c;g++)S.push({maxCol:Math.ceil(T/C/s)-1,maxRow:Math.ceil(R/C/o)-1,minCol:0,minRow:0}),C*=2;return{storageInfo:j,rasterInfo:new E.a({width:T,height:R,pixelType:i,bandCount:a,extent:f,spatialReference:h,pixelSize:d,keyProperties:p,statistics:u,histograms:r,multidimensionalInfo:e.mdInfo,colormap:b,storageInfo:new W({blockWidth:s,blockHeight:o,pyramidBlockWidth:s,pyramidBlockHeight:o,origin:y,tileInfo:v,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:S})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then(e=>e.data).catch(()=>null),a=await Object(p.b)([t,i]);let r;if(a[0]){let e=a[0].fields;const t=a[0].values;if(e&&t){e=e.map(e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":ee.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(r={fields:e,features:i})}}return!r&&a[1]&&(r=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const a=t.getUint32(4,!0),r=t.getUint16(8,!0),n=t.getUint16(10,!0),s={version:i,recordCount:a,headerByteCount:r,recordByteCount:n};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(Q.a)(new Uint8Array(e,o,11)),type:u,typeName:[\"String\",\"Date\",\"Double\",\"Boolean\",\"String\",\"Integer\"][[\"C\",\"D\",\"F\",\"L\",\"M\",\"N\"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<a&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if(\"C\"===t.type)i.push(Object(Q.a)(new Uint8Array(e,o,t.length)).trim());else if(\"N\"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if(\"F\"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if(\"D\"===t.type){const a=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(a.substring(0,4),10),parseInt(a.substring(4,6),10)-1,parseInt(a.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=n}}const h=function(e){const t=e.fields,i=e.records,a=t.some(e=>\"oid\"===e.name.toLowerCase())?\"OBJECTID\":\"OID\",r=[{name:a,type:\"esriFieldTypeOID\",alias:\"OID\"}].concat(t.map(e=>({name:e.name,type:\"esriFieldType\"+e.typeName,alias:e.name}))),n=r.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[a]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:\"\",fields:r,features:s}}({fields:l,records:c});return{header:s,fields:l,records:c,recordSet:h}}}.parse(a[1]).recordSet),A.default.fromJSON(r)}_buildCacheFilePath(e,t,i,a){const n=this.storageInfo.packetSize,s=Math.floor(t/n)*n,o=Math.floor(i/n)*n,l=\"R\"+this._toHexString4(s)+\"C\"+this._toHexString4(o);let c=\"L\";c+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==a?void 0:a[0];if(!Object(r.h)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.filter(e=>e.name===h.variableName)[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let r=0;r<d;r++)f=\"0\"+f;return f=\"S\"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,a=i*(e%i)+t%i;if(a<0)throw\"Invalid level / row / col\";return 20+a*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let a,r=0;for(a=0;a<5;a++)r|=(255&i[a])<<8*a;const n=0xffffffffff&r;for(r=0,a=5;a<8;a++)r|=(255&i[a])<<8*(a-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};Object(a.a)([Object(o.b)({readOnly:!0})],te.prototype,\"storageInfo\",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],te.prototype,\"datasetFormat\",void 0),te=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.CloudRaster\")],te);var ie=te;let ae=class extends Z{constructor(){super(...arguments),this.datasetFormat=\"MEMORY\"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:a,histograms:r,name:n,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new M.a({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new _.a({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p=new E.a({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:{x:f.width/c,y:f.height/u},spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:a,isPseudoSpatialReference:d,histograms:r});this.createRemoteDatasetStorageInfo(p,512,512),this._set(\"rasterInfo\",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=n,this.url=\"/InMemory/\"+n}fetchRawTile(e,t,i,a={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Object(p.u)(r)}async _buildInMemoryRaster(e,t,i){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a},i):Object(p.u)(Object($.m)(e,t,a)),s=Object(r.h)(this.rasterInfo.statistics),o=Object(r.h)(this.rasterInfo.histograms),l=s&&o?Object(p.u)({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Object(p.u)(Object($.f)(e)),c=await Object(p.j)([n,l]);if(!c[0].value&&c[1].value)throw new f.a(\"inmemory-raster:open\",\"failed to build in memory raster\");var u,h;this._pixelBlockTiles=c[0].value,s||(this.rasterInfo.statistics=null==(u=c[1].value)?void 0:u.statistics),o&&(this.rasterInfo.histograms=null==(h=c[1].value)?void 0:h.histograms)}};Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],ae.prototype,\"datasetFormat\",void 0),Object(a.a)([Object(o.b)()],ae.prototype,\"data\",void 0),ae=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.InMemoryRaster\")],ae);var re=ae;function ne(e,t,i){const{x:a,y:r}=t;if(i<2)return{x:e[0]+a*e[2]+r*e[4],y:e[1]+a*e[3]+r*e[5]};if(2===i){const t=a*a,i=r*r,n=a*r;return{x:e[0]+a*e[2]+r*e[4]+t*e[6]+n*e[8]+i*e[10],y:e[1]+a*e[3]+r*e[5]+t*e[7]+n*e[9]+i*e[11]}}const n=a*a,s=r*r,o=a*r,l=n*a,c=n*r,u=a*s,h=r*s;return{x:e[0]+a*e[2]+r*e[4]+n*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+a*e[3]+r*e[5]+n*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function se(e,t,i){const{xmin:a,ymin:r,xmax:n,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:a,y:s}),l.push({x:n,y:s}),l.push({x:a,y:r}),l.push({x:n,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:a,y:r+(s-r)*t/(e-1)}),l.push({x:n,y:r+(s-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:a+(n-a)*t/e,y:r}),l.push({x:a+(n-a)*t/e,y:s})}l=l.map(t=>ne(e,t,i));const c=l.map(e=>e.x),u=l.map(e=>e.y);return new M.a({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let oe=class extends q.a{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get(\"inverseCoefficients\");const t=this._get(\"forwardCoefficients\");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,a,r,n,s]=e,o=a*s-n*r,l=n*r-a*s;return[(n*i-t*s)/o,(a*i-t*r)/l,s/o,r/l,-n/o,-a/l]}(t)),e}set inverseCoefficients(e){this._set(\"inverseCoefficients\",e)}forwardTransform(e){if(\"point\"===e.type){const t=ne(this.forwardCoefficients,e,this.polynomialOrder);return new J.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if(\"point\"===e.type){const t=ne(this.inverseCoefficients,e,this.polynomialOrder);return new J.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.inverseCoefficients,e,this.polynomialOrder)}};Object(a.a)([Object(o.b)({json:{write:!0}})],oe.prototype,\"polynomialOrder\",void 0),Object(a.a)([Object(o.b)({json:{write:!0}})],oe.prototype,\"forwardCoefficients\",void 0),Object(a.a)([Object(o.b)({dependsOn:[\"forwardCoefficients\"],json:{write:!0}})],oe.prototype,\"inverseCoefficients\",null),oe=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterTransforms.PolynomialTransform\")],oe);var le=oe;function ce(e,t){if(!e||!t)return[];let i=t;t.indexOf(\"/\")>-1?(i=t.slice(0,t.indexOf(\"/\")),t=t.slice(t.indexOf(\"/\")+1)):t=\"\";const a=[];if(t){const r=ce(e,i);for(let e=0;e<r.length;e++)ce(r[e],t).forEach(e=>a.push(e));return a}const r=e.getElementsByTagNameNS(\"*\",i);if(!r||0===r.length)return[];for(let n=0;n<r.length;n++)a.push(r[n]||r.item[n]);return a}function ue(e,t){if(!e||!t)return null;let i=t;t.indexOf(\"/\")>-1?(i=t.slice(0,t.indexOf(\"/\")),t=t.slice(t.indexOf(\"/\")+1)):t=\"\";const a=ce(e,i);return a.length>0?t?ue(a[0],t):a[0]:null}function he(e,t=null){const i=t?ue(e,t):e;let a;return i?(a=i.textContent||i.nodeValue,a?a.trim():null):null}function fe(e,t){return function(e,t){const i=ce(e,t),a=[];let r;for(let n=0;n<i.length;n++)r=i[n].textContent||i[n].nodeValue,r&&(r=r.trim(),\"\"!==r&&a.push(r));return a}(e,t).map(e=>Number(e))}function de(e,t){const i=he(e,t);return Number(i)}function pe(e,t){var i;const a=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),r=t.toLowerCase();return a.slice(a.lastIndexOf(\":\")+1)===r}function me(e,t){if(!e||!t)return null;const i=[];for(let a=0;a<e.length;a++)i.push(e[a]),i.push(t[a]);return i}function ye(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new _.a({wkid:t});const i=e.replace(/\\]/g,\"[\").replace(/\\\"/g,\"\").split(\"[\").map(e=>e.trim()).filter(e=>\"\"!==e),a=i[i.length-1].split(\",\");return\"EPSG\"!==a[0]||(t=Number(a[1]),isNaN(t)||0===t)?new _.a({wkt:e}):new _.a({wkid:t})}function be(e){var t;if(\"pamdataset\"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(pe(e,\"SRS\")){if(!i.spatialReference){const t=he(e);i.spatialReference=ye(t)}}else if(pe(e,\"Metadata\"))if(\"xml:ESRI\"===e.getAttribute(\"domain\")){const{spatialReference:t,transform:a}=function(e){var t;const i=ue(e,\"GeodataXform\"),a=ye(de(i,\"SpatialReference/WKID\")||he(i,\"SpatialReference/WKT\"));if(\"typens:PolynomialXform\"!==i.getAttribute(\"xsi:type\"))return{spatialReference:a,transform:null};const r=null!=(t=de(i,\"PolynomialOrder\"))?t:1,n=fe(i,\"CoeffX/Double\"),s=fe(i,\"CoeffY/Double\"),o=fe(i,\"InverseCoeffX/Double\"),l=fe(i,\"InverseCoeffY/Double\"),c=me(n,s),u=me(o,l);return{spatialReference:a,transform:new le({polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=a,i.spatialReference||(i.spatialReference=t)}else ce(e,\"MDI\").forEach(e=>i.metadata[e.getAttribute(\"key\")]=he(e));else if(pe(e,\"PAMRasterBand\")){const t=function(e){var t;const i=de(e,\"NoDataValue\"),a=ue(e,\"Histograms/HistItem\"),r=de(a,\"HistMin\"),n=de(a,\"HistMax\"),s=de(a,\"BucketCount\"),o=null==(t=he(a,\"HistCounts\"))?void 0:t.split(\"|\").map(e=>Number(e));let l,c,u,h;ce(e,\"Metadata/MDI\").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute(\"key\").toUpperCase()){case\"STATISTICS_MINIMUM\":l=i;break;case\"STATISTICS_MAXIMUM\":c=i;break;case\"STATISTICS_MEAN\":u=i;break;case\"STATISTICS_STDDEV\":h=i}});const f=de(e,\"Metadata/SourceBandIndex\");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:r,max:n,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const a=i.rasterBands;return a&&(i.statistics=a[0].statistics?a.map(e=>e.statistics):null,i.histograms=a[0].histogram?a.map(e=>e.histogram):null),i}let ge=class extends Z{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:a,histograms:r,transform:n}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new _.a({wkid:3857})),null!=r&&r.length&&null==a&&(a=Object($.e)(r));const{width:o,height:l}=t;let c=new M.a({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const e=n.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(n=null,c=u)}const f=new re({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:t,statistics:a,histograms:r,keyProperties:{DateType:\"Processed\"},isPseudoSpatialReference:s}});await f.open(),this._set(\"rasterInfo\",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,a={}){return this._inMemoryRaster.fetchRawTile(e,t,i,a)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:\"array-buffer\",signal:null==e?void 0:e.signal}),i=Object(V.b)(t).toUpperCase();if(\"JPG\"!==i&&\"PNG\"!==i&&\"GIF\"!==i&&\"BMP\"!==i)throw new f.a(\"image-aux-raster:open\",\"the data is not a supported format\");return this._set(\"datasetFormat\",i),await this.decodePixelBlock(t,{format:\"jpg\",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const a=Object(r.n)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],s=n.indexOf(\"aux.xml\")>-1?null:this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:a}),o=this.datasetFormat,l=\"JPG\"===o?\"jgw\":\"PNG\"===o?\"pgw\":\"BMP\"===o?\"bpw\":null,c=n.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf(\".\"))+\".\"+l,{responseType:\"text\",signal:a}),u=await Object(p.j)([s,c]);if(null!=a&&a.aborted)throw Object(p.e)();const h=be(null==(i=u[0].value)?void 0:i.data);if(!h.transform){const e=u[1].value?u[1].value.data.split(\"\\n\").slice(0,6).map(e=>Number(e)):null;h.transform=6===(null==e?void 0:e.length)?new le({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],ge.prototype,\"datasetFormat\",void 0),ge=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.ImageAuxRaster\")],ge);var xe=ge,Oe=i(\"q2iW\"),Ie=i(\"llFo\");let we=class extends Z{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat=\"RasterTileServer\"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const a=i.data;if(this.sourceJSON=a,this.tileType=a.cacheType,null==this.tileType&&(this.tileType=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"].indexOf(a.tileInfo.format.toLowerCase())>-1?\"Map\":\"lerc\"===a.tileInfo.format.toLowerCase()?\"Elevation\":\"Raster\"),!a)throw new f.a(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!a.tileInfo)throw new f.a(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this.datasetName=a.name.slice(a.name.indexOf(\"/\")+1);const n=await this._fetchRasterInfo({signal:t});if(!Object(r.h)(n))throw new f.a(\"image-server-raster:open\",\"cannot initialize image service\");{const e=\"Map\"===this.tileType?Object(Oe.a)(a.tileInfo,a):P.a.fromJSON(a.tileInfo),{extent:t,pixelSize:i}=n,r=.5/n.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));\"Map\"!==this.tileType&&0!==a.maxScale&&(\"Raster\"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter(e=>Math.abs(e.scale-a.maxScale)<r)[0],s||(s=e.lods.filter(e=>e.scale>a.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));\"Map\"===this.tileType?this._levelOffset=e.lods[0].level:0!==a.minScale&&\"Elevation\"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-a.minScale)<r)[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>r||!e.lods.some(e=>Math.abs(e.resolution-u)<r))&&(i.x=i.y=s.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=s.level-o.level,[f,d]=e.size,p=e.origin;let{x:m,y:y}=i;const b=[{minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/y)}];if(h>0)for(let a=0;a<h;a++)m*=2,y*=2,b.push({minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/m)});n.storageInfo=new W({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:b}),this._set(\"rasterInfo\",n)}if(a.capabilities.toLowerCase().indexOf(\"tilemap\")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:Object(d.I)(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new Ie.a({layer:e})}}async fetchRawTile(e,t,i,a={}){const{storageInfo:r,extent:n,pixelSize:s}=this.rasterInfo,o=`${this.url}/tile/${r.maximumPyramidLevel-e+this._levelOffset}/${t}/${i}`,l=this._slices?{sliceId:a.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:\"array-buffer\",signal:a.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType}),h=r.blockBoundary[e];if(\"jpg\"!==r.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return u;const{origin:f,blockWidth:d,blockHeight:p}=r,m=Math.pow(2,e),y=Math.round((n.xmin-f.x)/(s.x*m))%d,b=Math.round((n.xmax-f.x)/(s.x*m))%d,g=Math.round((f.y-n.ymax)/(s.x*m))%p,x=Math.round((f.y-n.ymin)/(s.x*m))%p,O=i===h.minCol?y:0,I=t===h.minRow?g:0,w=i===h.maxCol?b:d,v=t===h.maxRow?x:p;return Object($.l)(u,{x:O,y:I},{width:w-O,height:v-I}),u}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),a=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),r=await Object(p.b)([i,a]);return r[0]&&r[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let a=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-a+this._levelOffset;const s=i.srcLocation;for(;n>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,a++,i=this.identifyPixelLocation(s,a,t.datumTransformation),null===i)return null}return-1===n||null==i?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),r=_.a.fromJSON(t.spatialReference||t.extent.spatialReference);if(\"Map\"===this.tileType)return new E.a({width:i,height:a,bandCount:3,extent:M.a.fromJSON(t.extent),spatialReference:r,pixelSize:new J.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}});const{slice:n,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+\"/rasterAttributeTable\",{query:{slice:n,f:\"json\"},signal:s}).then(e=>A.default.fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+\"/colormap\",{query:{slice:n,f:\"json\"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+\"/histograms\",{query:{slice:n,f:\"json\"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+\"/keyProperties\",{query:{f:\"json\"},signal:s}).then(e=>e.data).catch(()=>{}),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+\"/slices\",{query:{f:\"json\"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Object(p.b)([o,l,c,u,h,f]).then(e=>{let n=null;if(t.minValues&&t.minValues.length===t.bandCount){n=[];for(let e=0;e<t.minValues.length;e++)n.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new E.a({width:i,height:a,bandCount:t.bandCount,extent:M.a.fromJSON(t.extent),spatialReference:r,pixelSize:new J.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:t.pixelType.toLowerCase(),statistics:n,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+\"/multidimensionalInfo\",{query:{f:\"json\"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}};Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],we.prototype,\"datasetFormat\",void 0),Object(a.a)([Object(o.b)()],we.prototype,\"tileType\",void 0),we=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],we);var ve=we,je=i(\"Piei\"),Te=i(\"5VpP\");const Re=new Map;Re.set(\"Int8\",\"s8\"),Re.set(\"UInt8\",\"u8\"),Re.set(\"Int16\",\"s16\"),Re.set(\"UInt16\",\"u16\"),Re.set(\"Int32\",\"s32\"),Re.set(\"UInt32\",\"u32\"),Re.set(\"Float32\",\"f32\"),Re.set(\"Float64\",\"f32\"),Re.set(\"Double64\",\"f32\");const Se=new Map;Se.set(\"lerc\",\".lrc\"),Se.set(\"none\",\".til\"),Se.set(\"deflate\",\".pzp\"),Se.set(\"jpeg\",\".jzp\");let Ce=class extends Z{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const i=e?Object(r.n)(e.signal):null,a=await this.request(this.url,{responseType:\"xml\",signal:i}),{rasterInfo:n,files:s}=this._parseHeader(a.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf(\"aux.xml\"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(n.statistics=null!=(o=t.statistics)?o:n.statistics,n.histograms=t.histograms,t.histograms&&!Object(r.h)(n.statistics)&&(n.statistics=Object($.e)(t.histograms)))}this._set(\"rasterInfo\",n),this._files=s;const l=await this.request(s.index,{responseType:\"array-buffer\",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,h=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:b,height:g,bandCount:x}=this.rasterInfo,O=[],I=\"none\"===m?1:x;for(;h<this._storageIndex.length;)f++,c=Math.ceil(b/d/Math.pow(y,f)),u=Math.ceil(g/p/Math.pow(y,f)),h+=c*u*I*4,O.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=O,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){const{blockWidth:r,blockHeight:n,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(r*n);return new je.a({width:r,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,y=\"none\"===o?1:c,b=[];let g=0;for(g=0;g<y;g++)(!m||m.indexOf[g]>-1)&&b.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:\"array-buffer\",signal:a.signal}));const x=await Object(p.b)(b),O=x.map(e=>e.data.byteLength).reduce((e,t)=>e+t),I=new Uint8Array(O);let w=0;for(g=0;g<y;g++)I.set(new Uint8Array(x[g].data),w),w+=x[g].data.byteLength;const v=\"lerc\"===this.rasterInfo.storageInfo.compression?\"lerc\":\"bip\",j=await this.decodePixelBlock(I.buffer,{width:r,height:n,format:v,pixelType:u});let T=0,R=0;if(f!==r||d!==n){let e=j.mask;if(e)for(g=0;g<n;g++)if(R=g*r,g<d)for(T=f;T<r;T++)e[R+T]=0;else for(T=0;T<r;T++)e[R+T]=0;else for(e=new Uint8Array(r*n),j.mask=e,g=0;g<d;g++)for(R=g*r,T=0;T<f;T++)e[R+T]=1}return j}_parseIndex(e){if(e.byteLength%16>0)throw\"invalid array buffer must be multiples of 16\";let t,i,a,r,n,s;if(Te.a){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),a=new Uint8Array(r),n=0;n<e.byteLength/4;n++)for(s=0;s<4;s++)a[4*n+s]=i[4*n+3-s];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:a,blockHeight:r,pyramidScalingFactor:n,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u=\"none\"===s?1:c;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=Math.pow(n,d),h=Math.ceil(o/a/m),f=Math.ceil(l/r/m),p+=h*f;m=Math.pow(n,e),h=Math.ceil(o/a/m),f=Math.ceil(l/r/m),p+=t*h+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let b=0,g=0;const x=[];for(let O=0;O<u;O++)b=y[4*O+0]*Math.pow(2,32)+y[4*O+1],g=b+y[4*O+2]*Math.pow(2,32)+y[4*O+3],x.push({from:b,to:g});return{ranges:x,actualTileWidth:i<h-1?a:Math.ceil(o/m)-a*(h-1),actualTileHeight:t<f-1?r:Math.ceil(l/m)-r*(f-1)}}_parseHeader(e){const t=ue(e,\"MRF_META/Raster\");if(!t)throw new f.a(\"mrf:open\",\"not a valid MRF format\");const i=ue(t,\"Size\"),a=parseInt(i.getAttribute(\"x\"),10),r=parseInt(i.getAttribute(\"y\"),10),n=parseInt(i.getAttribute(\"c\"),10),s=(he(t,\"Compression\")||\"none\").toLowerCase();if(!s||-1===[\"none\",\"lerc\"].indexOf(s))throw new f.a(\"mrf:open\",\"currently does not support compression \"+s);const o=he(t,\"DataType\")||\"UInt8\",l=Re.get(o);if(null==l)throw new f.a(\"mrf:open\",\"currently does not support pixel type \"+o);const c=ue(t,\"PageSize\"),u=parseInt(c.getAttribute(\"x\"),10),h=parseInt(c.getAttribute(\"y\"),10),d=ue(t,\"DataValues\");let p,m;if(d&&(m=d.getAttribute(\"NoData\"),null!=m&&(p=m.trim().split(\" \").map(e=>parseFloat(e)))),ue(e,\"MRF_META/CachedSource\"))throw new f.a(\"mrf:open\",\"currently does not support MRF referencing other data files\");const y=ue(e,\"MRF_META/GeoTags\"),b=ue(y,\"BoundingBox\");if(null==b)throw new f.a(\"mrf:open\",\"missing node MRF_META/GeoTags/BoundingBox\");const g=parseFloat(b.getAttribute(\"minx\")),x=parseFloat(b.getAttribute(\"miny\")),O=parseFloat(b.getAttribute(\"maxx\")),I=parseFloat(b.getAttribute(\"maxy\")),w=he(y,\"Projection\"),v=he(e,\"datafile\"),j=he(e,\"IndexFile\");let T;\"LOCAL_CS[]\"!==w&&(T=new _.a({wkt:w}));const R=new M.a(g,x,O,I);R.spatialReference=T;const S=ue(e,\"MRF_META/Rsets\"),C=parseInt(S&&S.getAttribute(\"scale\")||\"2\",10),k=new W({origin:new J.a({x:R.xmin,y:R.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:s,pyramidScalingFactor:C}),F=new J.a({x:(O-g)/a,y:(I-x)/r,spatialReference:T});return{rasterInfo:new E.a({width:a,height:r,extent:R,spatialReference:T,bandCount:n,pixelType:l,pixelSize:F,noDataValue:p,storageInfo:k}),files:{mrf:this.url,index:j||this.url.replace(\".mrf\",\".idx\"),data:v||this.url.replace(\".mrf\",Se.get(s))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==e?void 0:e.signal});return be(t)}catch{return null}}};Object(a.a)([Object(o.b)()],Ce.prototype,\"_files\",void 0),Object(a.a)([Object(o.b)()],Ce.prototype,\"_storageIndex\",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],Ce.prototype,\"datasetFormat\",void 0),Ce=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterIO.MRFRaster\")],Ce);var _e=Ce,Me=i(\"D/0F\"),ke=i(\"bT0G\");const Fe=function(e,t){const i=e.get(t);return i&&i.values},Pe=function(e,t){const i=e.get(t);return i&&i.values[0]};let De=class extends Z{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async open(e){var t;await this.init();const i=e?Object(r.n)(e.signal):null,{data:a}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:i});if(!a)throw new f.a(\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{littleEndian:n,firstIFD:s,isBigTiff:o}=Object(ke.f)(a),l=[];await this.readIFDs(l,a,n,s,0,o?8:4,i);const c=Object(ke.c)(l),{width:u,height:h,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:b,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:O,pyramidBlockHeight:I,tileBoundary:w,metadata:v}=c,j=M.a.fromJSON(c.extent),T=j.spatialReference,R=new J.a(j?{x:j.xmin,y:j.ymax,spatialReference:T}:{x:0,y:0}),S=new W({blockWidth:d,blockHeight:p,pyramidBlockWidth:O,pyramidBlockHeight:I,compression:b,origin:R,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:w}),C=new J.a({x:(j.xmax-j.xmin)/u,y:(j.ymax-j.ymin)/h,spatialReference:T}),_=new E.a({width:u,height:h,bandCount:m,pixelType:y,compression:b,pixelSize:C,storageInfo:S,spatialReference:T,keyProperties:v?{BandProperties:v.bandProperties,DataType:v.dataType}:{},extent:j,statistics:v?v.statistics:null});if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf(\"aux.xml\"))){const t=await this._fetchAuxiliaryData(e);var k;null!=t&&(_.statistics=null!=(k=t.statistics)?k:_.statistics,_.histograms=t.histograms,t.histograms&&!Object(r.h)(_.statistics)&&(_.statistics=Object($.e)(t.histograms)))}if(this._set(\"rasterInfo\",_),this._headerInfo={littleEndian:n,isBigTiff:o,ifds:l,...c},!this._headerInfo.isSupported)throw new f.a(\"tiffraster:open\",\"this tiff is not supported: \"+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:r}=this.rasterInfo.storageInfo,n=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,s=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=r[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const l=this.getTileLocation(e,t,i);if(!l)return null;const{range:c,actualTileWidth:u,actualTileHeight:h,ifd:f}=l,{data:d}=await this.request(this.url,{range:c,responseType:\"array-buffer\",signal:a.signal}),p=await this.decodePixelBlock(d,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:n,height:s,planes:null,pixelType:null});let m,y,b;if(u!==n||h!==s){let e=p.mask;if(e)for(m=0;m<s;m++)if(b=m*n,m<h)for(y=u;y<n;y++)e[b+y]=0;else for(y=0;y<n;y++)e[b+y]=0;else for(e=new Uint8Array(n*s),p.mask=e,m=0;m<h;m++)for(b=m*n,y=0;y<u;y++)e[b+y]=1}return p}async readIFDs(e,t,i,a,r,n=4,s){if(!a)return null;(a>=t.byteLength||a<0)&&(t=(await this.request(this.url,{range:{from:a+r,to:a+r+this._bufferSize},responseType:\"array-buffer\",signal:s})).data,r=a+r,a=0);const o=await this.readIFD(t,i,a,r,Me.a.TIFF_TAGS,n,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-r,r,n,s)}async readIFD(e,t,i,a,r=Me.a.TIFF_TAGS,n=4,s){if(!e)return null;const o=Object(ke.e)(e,t,i,a,r,n);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const r=i.map(e=>e.offlineOffsetSize),n=Math.min.apply(null,r.map(e=>e[0]));if(Math.min.apply(null,r.map(e=>e[0]+e[1]))-n<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:\"array-buffer\",signal:s});e=r,a=n,i.forEach(i=>Object(ke.d)(e,t,i,a))}}if(o.ifd.has(\"GEOKEYDIRECTORY\")){const i=o.ifd.get(\"GEOKEYDIRECTORY\"),r=i.values;if(r&&r.length>4){const n=r[0]+\".\"+r[1]+\".\"+r[2],o=await this.readIFD(e,t,i.valueOffset+6-a,a,Me.a.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:a,to:a+o.requiredBufferSize+4},responseType:\"array-buffer\",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,a,Me.a.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:a,blockBoundary:r}=this.rasterInfo.storageInfo,n=0===e?0:e-(a-1),s=this._headerInfo.ifds[n];if(!s)return null;const o=Fe(s,\"TILEOFFSETS\");if(void 0===o)return null;const l=Fe(s,\"TILEBYTECOUNTS\"),{minRow:c,minCol:u,maxRow:h,maxCol:f}=r[n];if(t>h||i>f||t<c||i<u)return null;const d=Pe(s,\"IMAGEWIDTH\"),p=Pe(s,\"IMAGELENGTH\"),m=Pe(s,\"TILEWIDTH\"),y=Pe(s,\"TILELENGTH\"),b=t*(f+1)+i,g=o[b],x=l[b];return null==g||null==x?null:{range:{from:g,to:g+x-1},ifd:s,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==e?void 0:e.signal});return be(t)}catch{return null}}};Object(a.a)([Object(o.b)()],De.prototype,\"_files\",void 0),Object(a.a)([Object(o.b)()],De.prototype,\"_headerInfo\",void 0),Object(a.a)([Object(o.b)()],De.prototype,\"_bufferSize\",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],De.prototype,\"datasetFormat\",void 0),De=Object(a.a)([Object(h.a)(\"esri.layers.support.rasterDatasets.TIFFRaster\")],De);var Be=De;const Ne=new Map;Ne.set(\"CRF\",{desc:\"Cloud Raster Format\",constructor:ie}),Ne.set(\"MRF\",{desc:\"Meta Raster Format\",constructor:_e}),Ne.set(\"TIFF\",{desc:\"GeoTIFF\",constructor:Be}),Ne.set(\"RasterTileServer\",{desc:\"Raster Tile Server\",constructor:ve}),Ne.set(\"JPG\",{desc:\"JPG Raster Format\",constructor:xe}),Ne.set(\"PNG\",{desc:\"PNG Raster Format\",constructor:xe}),Ne.set(\"GIF\",{desc:\"GIF Raster Format\",constructor:xe}),Ne.set(\"BMP\",{desc:\"BMP Raster Format\",constructor:xe});const ze=Object(l.b)()({RSP_NearestNeighbor:\"nearest\",RSP_BilinearInterpolation:\"bilinear\",RSP_CubicConvolution:\"cubic\",RSP_Majority:\"majority\"});function He(){return{enabled:!this.loaded||\"RasterTileServer\"===this.raster.datasetFormat&&\"Raster\"===this.raster.tileType}}let Le=class extends(Object(w.a)(Object(T.a)(Object(j.a)(Object(x.a)(Object(v.a)(L(Object(b.a)(y.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode=\"show\",this.sourceJSON=null,this.version=null,this.title=null,this.type=\"imagery-tile\",this.operationalLayerType=\"ArcGISTiledImageServiceLayer\",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return\"string\"==typeof e?{url:e,...t}:e}load(e){const t=Object(r.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Image Service\"]},e).then(()=>this._openRaster(t),()=>this._openRaster(t))),Object(p.u)(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new I.a({name:\"Raster.ServicePixelValue\",alias:\"Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"})];const a=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(a){const e=a.filter(e=>\"oid\"!==e.type&&\"value\"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name=\"Raster.\"+e.name,t});i=i.concat(e)}return i}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}readRenderer(e,t,i){const a=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=Object(O.b)(a,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return Object(R.a)(this,e)}write(e,t){const{raster:i}=this;return(this.loaded?\"RasterTileServer\"===i.datasetFormat&&(\"Raster\"===i.tileType||\"Map\"===i.tileType):this.url&&/\\/ImageServer(\\/|\\/?$)/i.test(this.url))?super.write(e,t):(t&&t.messages&&t.messages.push(new f.a(\"layer:unsupported\",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t.origin}/${t.layerContainerType||\"operational-layers\"}'`,{layer:this})),null)}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ne.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:a}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(\".\")&&(r=t.slice(t.lastIndexOf(\".\")+1).toUpperCase()),\"OVR\"===r||\"TIF\"===r?r=\"TIFF\":\"JPG\"!==r&&\"JPEG\"!==r&&\"JFIF\"!==r||(r=\"JPG\"),t.toLowerCase().indexOf(\"/imageserver\")>-1&&-1===t.toLowerCase().indexOf(\"/wcsserver\")&&(r=\"RasterTileServer\");const n={url:t,sourceJSON:a,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let s,o;if(this.supportedFormats.has(r))return s=Ne.get(r).constructor,o=new s(n),await o.open({signal:e.signal}),o;if(r)throw new f.a(\"rasterfactory:open\",\"not a supported format \"+r);const l=Array.from(Ne.keys());let c=0;const u=function(){return r=l[c++],r?(s=Ne.get(r).constructor,o=new s(n),o.open({signal:e.signal}).then(()=>o).catch(()=>u())):null};return u()}static register(e,t,i){Ne.has(e.toUpperCase())||Ne.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new f.a(\"imagery-tile-layer:load\",\"cannot load resources on \"+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set(\"version\",this.sourceJSON.currentVersion),this._set(\"copyright\",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),\"Map\"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(a.a)([Object(o.b)()],Le.prototype,\"ioConfig\",void 0),Object(a.a)([Object(o.b)({type:[s.a],json:{write:{overridePolicy:He}}})],Le.prototype,\"bandIds\",void 0),Object(a.a)([Object(o.b)({json:{write:{overridePolicy:He}}}),Object(c.a)(ze)],Le.prototype,\"interpolation\",void 0),Object(a.a)([Object(o.b)({json:{write:!0}})],Le.prototype,\"multidimensionalDefinition\",void 0),Object(a.a)([Object(o.b)(g.d)],Le.prototype,\"legendEnabled\",void 0),Object(a.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Le.prototype,\"isReference\",void 0),Object(a.a)([Object(o.b)({type:[\"show\",\"hide\"]})],Le.prototype,\"listMode\",void 0),Object(a.a)([Object(o.b)()],Le.prototype,\"sourceJSON\",void 0),Object(a.a)([Object(o.b)({readOnly:!0})],Le.prototype,\"version\",void 0),Object(a.a)([Object(o.b)()],Le.prototype,\"title\",void 0),Object(a.a)([Object(o.b)({readOnly:!0,json:{read:!1}})],Le.prototype,\"type\",void 0),Object(a.a)([Object(o.b)({type:[\"ArcGISTiledImageServiceLayer\"]})],Le.prototype,\"operationalLayerType\",void 0),Object(a.a)([Object(o.b)({type:Boolean,value:!0,json:{read:{source:\"disablePopup\",reader:(e,t)=>!t.disablePopup},write:{target:\"disablePopup\",overridePolicy:He,writer(e,t,i){t[i]=!e}}}})],Le.prototype,\"popupEnabled\",void 0),Object(a.a)([Object(o.b)({type:m.a,json:{read:{source:\"popupInfo\"},write:{target:\"popupInfo\",overridePolicy:He}}})],Le.prototype,\"popupTemplate\",void 0),Object(a.a)([Object(o.b)({readOnly:!0,dependsOn:[\"title\"]})],Le.prototype,\"defaultPopupTemplate\",null),Object(a.a)([Object(o.b)({readOnly:!0,type:[I.a],dependsOn:[\"rasterInfo\"]})],Le.prototype,\"fields\",null),Object(a.a)([Object(o.b)({types:O.a,json:{name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:He},origins:{\"web-scene\":{types:O.c,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type})}}}}})],Le.prototype,\"renderer\",null),Object(a.a)([Object(u.a)(\"renderer\")],Le.prototype,\"readRenderer\",null),Le=Object(a.a)([Object(h.a)(\"esri.layers.ImageryTileLayer\")],Le),t.default=Le}}]);","name":"128.cee24719eb9c6bc6d6e4.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[128],{\n\n/***/ \"mRf7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"pO5D\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/has.js\nvar has = __webpack_require__(\"wSAH\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/maybe.js\nvar maybe = __webpack_require__(\"srIe\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Logger.js\nvar Logger = __webpack_require__(\"6S2I\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/ensureType.js\nvar ensureType = __webpack_require__(\"zqDF\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js\nvar property = __webpack_require__(\"WbKI\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/jsonMap.js\nvar jsonMap = __webpack_require__(\"+opI\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js\nvar enumeration = __webpack_require__(\"RI0u\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js\nvar reader = __webpack_require__(\"r88o\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js + 1 modules\nvar subclass = __webpack_require__(\"04ZG\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Error.js\nvar Error = __webpack_require__(\"zlDU\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/urlUtils.js\nvar urlUtils = __webpack_require__(\"4EHJ\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/uuid.js\nvar uuid = __webpack_require__(\"ju1D\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/portal/support/resourceExtension.js\nvar resourceExtension = __webpack_require__(\"9AIY\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/promiseUtils.js\nvar promiseUtils = __webpack_require__(\"9MzC\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/PopupTemplate.js + 3 modules\nvar PopupTemplate = __webpack_require__(\"SFah\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/Layer.js\nvar Layer = __webpack_require__(\"pqNC\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/MultiOriginJSONSupport.js + 2 modules\nvar MultiOriginJSONSupport = __webpack_require__(\"5pQd\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/commonProperties.js\nvar commonProperties = __webpack_require__(\"IvSi\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/OperationalLayer.js + 1 modules\nvar OperationalLayer = __webpack_require__(\"uRH/\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/rasterRenderers.js\nvar rasterRenderers = __webpack_require__(\"ukD5\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/Field.js\nvar Field = __webpack_require__(\"ofM5\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/BlendLayer.js\nvar BlendLayer = __webpack_require__(\"mXvl\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/PortalLayer.js\nvar PortalLayer = __webpack_require__(\"DbUH\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js\nvar RefreshableLayer = __webpack_require__(\"jhcG\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js\nvar ScaleRangeLayer = __webpack_require__(\"WmKv\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/support/popupUtils.js\nvar popupUtils = __webpack_require__(\"9Ruv\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/aliasOf.js\nvar aliasOf = __webpack_require__(\"Stxv\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js\nvar spatialReferenceUtils = __webpack_require__(\"f4Nx\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/SpatialReference.js\nvar SpatialReference = __webpack_require__(\"WZb1\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Extent.js\nvar Extent = __webpack_require__(\"OvF4\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry.js\nvar geometry = __webpack_require__(\"4GrV\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/request.js\nvar request = __webpack_require__(\"Lqtk\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js\nvar arcgisLayerUrl = __webpack_require__(\"VLTf\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/TileInfo.js\nvar TileInfo = __webpack_require__(\"3/ME\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js\nvar DimensionalDefinition = __webpack_require__(\"tidM\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/RasterJobHandler.js\nvar RasterJobHandler = __webpack_require__(\"2mvb\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js + 3 modules\nvar rasterRendererHelper = __webpack_require__(\"HM2S\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js + 1 modules\nvar RasterSymbolizer = __webpack_require__(\"ciAr\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst ImageryTileMixin_I=Logger[\"a\" /* default */].getLogger(\"esri.layers.mixins.ImageryTileMixin\"),ImageryTileMixin_J=r=>{let J=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation=\"nearest\",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set(\"multidimensionalDefinition\",e)}set url(e){this._set(\"url\",Object(arcgisLayerUrl[\"f\" /* sanitizeUrl */])(e,ImageryTileMixin_I))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(r&&r.pixels&&r.pixels.length>0))return null;let i;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:\"\"}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const r=Object(spatialReferenceUtils[\"d\" /* getInfo */])(e);return TileInfo[\"a\" /* default */].create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const s=this.getTileUrl(e,t,r);return Object(request[\"default\"])(s,{responseType:\"image\",query:{sliceId:this._sliceId,_ts:i.timestamp},signal:i.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i}}return\"raster-shaded-relief\"===this.renderer.type&&(i={buffer:{cols:1,rows:1},...i}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i}}return this.raster.fetchPixels(e,t,r,i)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new RasterJobHandler[\"a\" /* default */];return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(rasterRendererHelper[\"c\" /* getDefaultInterpolation */])(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set(\"interpolation\",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(maybe[\"h\" /* isSome */])(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],r=[];t.dimensions.forEach((e=>{r.push(new DimensionalDefinition[\"a\" /* default */]({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=r}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;(this.bandIds||(this.bandIds=Object(rasterRendererHelper[\"b\" /* getDefaultBandCombination */])(e)),this.renderer)||(this.renderer=Object(rasterRendererHelper[\"a\" /* createDefaultRenderer */])(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName}));this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new RasterSymbolizer[\"a\" /* default */]({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||ImageryTileMixin_I.warn(\"imagery-tile-mixin\",\"The given renderer is not supported by the layer.\")}};return Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"_cachedRendererJson\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"_sliceId\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"_compatibleFullExtent\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"_rasterJobHandler\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"bandIds\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"copyright\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Extent[\"a\" /* default */]}),Object(aliasOf[\"a\" /* aliasOf */])(\"rasterInfo.extent\")],J.prototype,\"fullExtent\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"interpolation\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:[DimensionalDefinition[\"a\" /* default */]]})],J.prototype,\"multidimensionalDefinition\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"raster\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0}),Object(aliasOf[\"a\" /* aliasOf */])(\"raster.rasterInfo\")],J.prototype,\"rasterInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"sourceJSON\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:SpatialReference[\"a\" /* default */]}),Object(aliasOf[\"a\" /* aliasOf */])(\"rasterInfo.spatialReference\")],J.prototype,\"spatialReference\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:TileInfo[\"a\" /* default */],dependsOn:[\"rasterInfo\"]}),Object(aliasOf[\"a\" /* aliasOf */])(\"rasterInfo.storageInfo.tileInfo\")],J.prototype,\"tileInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])(commonProperties[\"j\" /* url */])],J.prototype,\"url\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({types:rasterRenderers[\"a\" /* rasterRendererTypes */]})],J.prototype,\"renderer\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],J.prototype,\"symbolizer\",void 0),J=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.ImageryTileMixin\")],J),J};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Point.js + 2 modules\nvar Point = __webpack_require__(\"SuVq\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/tasks/support/FeatureSet.js\nvar FeatureSet = __webpack_require__(\"8prj\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/RasterInfo.js\nvar RasterInfo = __webpack_require__(\"pPNP\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/JSONSupport.js\nvar JSONSupport = __webpack_require__(\"ag7Y\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nlet RasterStorageInfo_s=class extends JSONSupport[\"a\" /* JSONSupport */]{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"blockWidth\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"blockHeight\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],RasterStorageInfo_s.prototype,\"compression\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Point[\"a\" /* default */],json:{write:!0}})],RasterStorageInfo_s.prototype,\"origin\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"firstPyramidLevel\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"maximumPyramidLevel\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],RasterStorageInfo_s.prototype,\"pyramidScalingFactor\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"pyramidBlockWidth\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Number,json:{write:!0}})],RasterStorageInfo_s.prototype,\"pyramidBlockHeight\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Boolean,json:{write:!0}})],RasterStorageInfo_s.prototype,\"isVirtualTileInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({json:{write:!0}})],RasterStorageInfo_s.prototype,\"tileInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],RasterStorageInfo_s.prototype,\"blockBoundary\",void 0),RasterStorageInfo_s=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.RasterStorageInfo\")],RasterStorageInfo_s);var RasterStorageInfo_p=RasterStorageInfo_s;/* harmony default export */ var RasterStorageInfo = (RasterStorageInfo_p);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Promise.js\nvar Promise = __webpack_require__(\"+rMe\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js + 3 modules\nvar RasterCodec = __webpack_require__(\"FFFX\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js\nvar pixelUtils = __webpack_require__(\"ne7T\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js\nvar rasterProjectionHelper = __webpack_require__(\"tODX\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js + 1 modules\nvar RawBlockCache = __webpack_require__(\"IYxN\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nlet BaseRaster_H=class extends(Object(Promise[\"b\" /* EsriPromiseMixin */])(JSONSupport[\"a\" /* JSONSupport */])){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=Object(rasterProjectionHelper[\"c\" /* load */])();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:TileInfo[\"a\" /* default */].create(),...e.ioConfig}}),e}set url(e){this._set(\"url\",Object(arcgisLayerUrl[\"f\" /* sanitizeUrl */])(e,Logger[\"a\" /* default */].getLogger(this.declaredClass)))}async open(e){throw new Error[\"a\" /* default */](\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,r,o,i={}){var n;const{tileInfo:s}=i,a=s.lodAt(e),l=new Point[\"a\" /* default */]({x:a.resolution,y:a.resolution,spatialReference:s.spatialReference}),c=this.getTileExtent(l,r,o,s);return null!=(n=i.multidimensionalDefinition)&&n.length&&Object(maybe[\"h\" /* isSome */])(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)||0}),this.fetchPixels(c,s.size[0],s.size[1],i)}async identify(e,r={}){const{spatialReference:o,extent:i}=this.rasterInfo,{datumTransformation:n}=r,s=Object(rasterProjectionHelper[\"e\" /* projectPoint */])(e,o,n);if(!i.intersects(s))return{location:s,value:null};let a=0;if(r.srcResolution){a=Object(rasterProjectionHelper[\"g\" /* snapPyramid */])(r.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel}else if(a=await this.computeBestPyramidLevelForLocation(e,r),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:m,colOffset:f}=l,h=Object(RawBlockCache[\"d\" /* getRasterId */])(this.url,r.sliceId),d=`${a}/${c}/${u}`;let p=Object(RawBlockCache[\"c\" /* getBlock */])(h,null,d);Object(maybe[\"h\" /* isSome */])(p)||(p=this.fetchRawTile(a,c,u,r),Object(RawBlockCache[\"e\" /* putBlock */])(h,null,d,p));const x=await p;if(!(x&&x.pixels&&x.pixels.length>0))return{location:s,value:null};const y=m*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!x.mask||x.mask[y]?x.pixels.map((e=>e[y])):null,pyramidLevel:a}}async fetchPixels(e,t,o,i={}){const n=e.clone().normalize();e=n[0];const s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=i,c=new Point[\"a\" /* default */]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/o,spatialReference:e.spatialReference}),u=i.srcResolution||(a?Object(rasterProjectionHelper[\"f\" /* projectResolution */])(c,s,e,l):c);if(!u)return null;const{pyramidLevel:m,pyramidResolution:f,excessiveReading:d}=Object(rasterProjectionHelper[\"g\" /* snapPyramid */])(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let x=a?Object(rasterProjectionHelper[\"d\" /* projectExtent */])(e,s,l):e;const y=Object(maybe[\"n\" /* unwrap */])(this.rasterInfo.transform);if(y&&(x=y.inverseTransform(x)),null==x)return null;const g={x:Math.floor((x.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-x.ymax)/f.y+.1)},w=Math.ceil((x.xmax-x.xmin)/f.x-.1),I=Math.ceil((x.ymax-x.ymin)/f.y-.1);if(w/t>8||I/o>8)return null;const v=await this.fetchRawPixels(m,g,{width:w,height:I},i);if(!v)return null;const k=m>0?p.pyramidBlockWidth:p.blockWidth,b=m>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===v.pixelBlocks.length&&k===t&&b===o&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:x,pixelBlock:v.pixelBlocks[0],transformGrid:null};const T=Object(rasterProjectionHelper[\"b\" /* getProjectionOffsetGrid */])(e,v.extent,c,l,y);let F;const S=!i.requestRawData,L={rows:T.spacing[0],cols:T.spacing[1]},{pixelBlocks:D,mosaicSize:H,isPartiallyFilled:z}=v;if(this.rasterJobHandler)F=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:H,destDimension:S?{width:t,height:o}:null,coefs:S?T.coefficients:null,sampleSpacing:S?L:null,interpolation:i.interpolation},i);else{const e=Object(pixelUtils[\"i\" /* mosaic */])(D,H);F=S?Object(pixelUtils[\"a\" /* approximateTransform */])(e,{width:t,height:o},T.coefficients,L,i.interpolation):e}return{srcExtent:x,pixelBlock:F,transformGrid:T,extent:e,isPartiallyFilled:z}}async fetchRawPixels(e,t,r,o){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,c=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:u,y:m}=t,{width:f,height:h}=r;o.buffer&&(u-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);const p=Math.floor(u/s),x=Math.floor(m/c),y=Math.floor((u+f-1)/s),g=Math.floor((m+h-1)/c),w=n[e];if(!w)return null;const{minRow:I,minCol:M,maxCol:R,maxRow:v}=w;if(g<I||y<M||x>v||p>R)return null;const k=[];let b,C=!1;for(let t=x;t<=g;t++)for(let r=p;r<=y;r++)t>=I&&r>=M&&v>=t&&R>=r?(b=this._fetchRawTile(e,t,r,o),this.ioConfig.allowPartialFill&&(b=Object(promiseUtils[\"c\" /* create */])((e=>{b.then((t=>e(t))).catch((()=>{C=!0,e(null)}))}))),k.push(b)):k.push(null);if(0===k.length)return null;const j=await Object(promiseUtils[\"b\" /* all */])(k),B={height:(g-x+1)*s,width:(y-p+1)*c},{nativePixelSize:P,spatialReference:T}=this.rasterInfo,F=P.x*Math.pow(2,e),S=P.y*Math.pow(2,e);return{extent:new Extent[\"a\" /* default */]({xmin:i.x+p*s*F,xmax:i.x+(y+1)*s*F,ymin:i.y-(g+1)*c*S,ymax:i.y-x*c*S,spatialReference:T}),pixelBlocks:j,mosaicSize:B,isPartiallyFilled:C}}async fetchRawTile(e,t,r,o){throw new Error[\"a\" /* default */](\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return Object(rasterProjectionHelper[\"d\" /* projectExtent */])(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(RasterCodec[\"a\" /* decode */])(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var o,i;const{customFetchParameters:n}=this.ioConfig,{range:s,query:a,headers:l}=t;r=null!=(o=null!=(i=r)?i:t.retryCount)?o:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(request[\"default\"])(e,{...t,query:{...a,...n},headers:{...l,...c}})}catch(o){if(r>0)return r--,this.request(e,t,r);throw o}}getSliceIndex(e){const{multidimensionalInfo:r}=this.rasterInfo;if(!Object(maybe[\"h\" /* isSome */])(r)||null==e||!e.length)return null;let o=0;const i=e[0].variableName;for(let t=0;t<r.variables.length;t++){const n=r.variables[t],s=n.dimensions;if(n.name!==i){o+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==r)return null;const i=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(i,s[t]);if(-1===n)return null;a.shift(),o+=t===l-1?n:n*a.reduce(((e,t)=>e+t))}}return o}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const i=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)i.push({level:n-e,resolution:s,scale:a}),s*=2,a*=2;const l=new Point[\"a\" /* default */]({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new TileInfo[\"a\" /* default */]({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:i}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,r=512,o){const{width:i,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new Point[\"a\" /* default */]({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const u=this._computeBlockBoundary(s,a,o,512,512);e.storageInfo=new RasterStorageInfo({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,r){const{spatialReference:o,pixelSize:i,extent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,m=Object(rasterProjectionHelper[\"e\" /* projectPoint */])(e,o,r);if(!n.intersects(m))return null;if(t<0||t>l)return null;const f=Math.pow(c,t),h=f*i.x,d=f*i.y,p=(u.y-m.y)/d/a,x=(m.x-u.x)/h/s,y=Math.min(a-1,Math.floor((p-Math.floor(p))*a)),g=Math.min(s-1,Math.floor((x-Math.floor(x))*s));return{pyramidLevel:t,row:Math.floor(p),col:Math.floor(x),rowOffset:y,colOffset:g,srcLocation:m}}getTileExtent(e,t,r,o){const{origin:i,spatialReference:n}=o,s=o.size[0],a=o.size[1],l=i.x+r*s*e.x,c=l+s*e.x,u=i.y-t*a*e.y,m=u-a*e.y;return new Extent[\"a\" /* default */]({xmin:l,xmax:c,ymin:m,ymax:u,spatialReference:n})}_computeBlockBoundary(e,t,r,o,i){let{x:n,y:s}=t;const a=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/s),maxRow:Math.floor((l-e.ymin-.1*s)/i/s)}];if(r>0)for(let t=0;t<r;t++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/n),maxRow:Math.floor((l-e.ymin-.1*s)/i/n)});return c}_fetchRawTile(e,r,o,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Object(promiseUtils[\"u\" /* resolve */])(null);const{minRow:s,minCol:a,maxCol:l,maxRow:f}=n;if(r<s||o<a||r>f||o>l)return Object(promiseUtils[\"u\" /* resolve */])(null);const h=Object(RawBlockCache[\"d\" /* getRasterId */])(this.url,i.sliceId),d=`${e}/${r}/${o}`;let p=Object(RawBlockCache[\"c\" /* getBlock */])(h,i.registryId,d);if(!Object(maybe[\"h\" /* isSome */])(p)){const t=Object(promiseUtils[\"d\" /* createAbortController */])();p=this.fetchRawTile(e,r,o,{...i,signal:t.signal}),Object(RawBlockCache[\"e\" /* putBlock */])(h,i.registryId,d,p,t),p.catch((()=>{Object(RawBlockCache[\"b\" /* deleteBlock */])(h,i.registryId,d)}))}return i.signal&&Object(promiseUtils[\"r\" /* onAbort */])(i,(()=>{Object(RawBlockCache[\"a\" /* decreaseRefCount */])(h,i.registryId,d)})),p}_getIndexFromDimensions(e,t){const{extent:r,interval:o,unit:i,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>r[1])return-1;const s=r[0];let a=-1;if(\"ISO8601\"===i){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||\"seconds\"){case\"seconds\":a=Math.round((e-s)/1e3/o);break;case\"minutes\":a=Math.round((e-s)/6e4/o);break;case\"hours\":a=Math.round((e-s)/36e5/o);break;case\"days\":a=Math.round((e-s)/864e5/o);break;case\"years\":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/o);break;case\"decades\":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/o)}return a}return Math.round((e-s)/o)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:o,values:i}=e;let n=(null==i?void 0:i.length)||0;if(n)return n;const s=t[0];if(0===n&&\"ISO8601\"===o){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||\"seconds\"){case\"seconds\":n=Math.round((t[1]-t[0])/1e3/r);break;case\"minutes\":n=Math.round((t[1]-t[0])/6e4/r);break;case\"hours\":n=Math.round((t[1]-t[0])/36e5/r);break;case\"days\":n=Math.round((t[1]-t[0])/864e5/r);break;case\"years\":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case\"decades\":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return n}return Math.round((t[1]-t[0])/r)}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])(commonProperties[\"j\" /* url */])],BaseRaster_H.prototype,\"url\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],BaseRaster_H.prototype,\"datasetName\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],BaseRaster_H.prototype,\"datasetFormat\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],BaseRaster_H.prototype,\"rasterInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],BaseRaster_H.prototype,\"ioConfig\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],BaseRaster_H.prototype,\"sourceJSON\",void 0),BaseRaster_H=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.BaseRaster\")],BaseRaster_H);var BaseRaster_z=BaseRaster_H;/* harmony default export */ var BaseRaster = (BaseRaster_z);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/byteStreamUtils.js\nvar byteStreamUtils = __webpack_require__(\"dCrW\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\n/* harmony default export */ var DBFParser = (class{static get supportedVersions(){return[5]}static parse(t){const r=new DataView(t),n=3&r.getUint8(0);if(3!==n)return{header:{version:n},recordSet:null};const i=r.getUint32(4,!0),s=r.getUint16(8,!0),a=r.getUint16(10,!0),o={version:n,recordCount:i,headerByteCount:s,recordByteCount:a};let l=32;const p=[],g=[];let u;if(3===n){for(;13!==r.getUint8(l);)u=String.fromCharCode(r.getUint8(l+11)).trim(),p.push({name:Object(byteStreamUtils[\"a\" /* bytesToUTF8 */])(new Uint8Array(t,l,11)),type:u,typeName:[\"String\",\"Date\",\"Double\",\"Boolean\",\"String\",\"Integer\"][[\"C\",\"D\",\"F\",\"L\",\"M\",\"N\"].indexOf(u)],length:r.getUint8(l+16)}),l+=32;if(l+=1,p.length>0)for(;g.length<i&&t.byteLength-l>a;){const n=[];32===r.getUint8(l)?(l+=1,p.forEach((r=>{if(\"C\"===r.type)n.push(Object(byteStreamUtils[\"a\" /* bytesToUTF8 */])(new Uint8Array(t,l,r.length)).trim());else if(\"N\"===r.type)n.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,l,r.length)).trim(),10));else if(\"F\"===r.type)n.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,l,r.length)).trim()));else if(\"D\"===r.type){const e=String.fromCharCode.apply(null,new Uint8Array(t,l,r.length)).trim();n.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)))}l+=r.length})),g.push(n)):l+=a}}const d=function(e){const t=e.fields,r=e.records,n=t.some((e=>\"oid\"===e.name.toLowerCase()))?\"OBJECTID\":\"OID\",i=[{name:n,type:\"esriFieldTypeOID\",alias:\"OID\"}].concat(t.map((e=>({name:e.name,type:\"esriFieldType\"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:\"\",fields:i,features:a}}({fields:p,records:g});return{header:o,fields:p,records:g,recordSet:d}}});\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst CloudRaster_h=new Map;CloudRaster_h.set(\"int16\",\"esriFieldTypeSmallInteger\"),CloudRaster_h.set(\"int32\",\"esriFieldTypeInteger\"),CloudRaster_h.set(\"int64\",\"esriFieldTypeInteger\"),CloudRaster_h.set(\"float32\",\"esriFieldTypeSingle\"),CloudRaster_h.set(\"float64\",\"esriFieldTypeDouble\"),CloudRaster_h.set(\"text\",\"esriFieldTypeString\");let CloudRaster_g=class extends BaseRaster{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:t}=await this.request(this.url+\"/conf.json\",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new Error[\"a\" /* default */](\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:r,rasterInfo:o}=this._parseHeader(t);if(\"thematic\"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set(\"storageInfo\",r),this._set(\"rasterInfo\",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:\"array-buffer\",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&\"RasterInfo\"===e.type&&![\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"].some((t=>!e[t]))}_parseHeader(e){var t;const r=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:o,histograms:i,colormap:s,blockWidth:f,blockHeight:u,firstPyramidLevel:d,maximumPyramidLevel:h}=e,g=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),y=new SpatialReference[\"a\" /* default */](e.extent.spatialReference||e.geodataXform.spatialReference),x=new Extent[\"a\" /* default */]({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:y}),I=new Point[\"a\" /* default */]({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:y}),S=null!=(t=e.properties)?t:{},v=e.format.toLowerCase().replace(\"cache/\",\"\"),b=new Point[\"a\" /* default */](e.origin.x,e.origin.y,y);let w,j,T,z;if(s&&s.colors)for(w=[],j=0;j<s.colors.length;j++)T=s.colors[j],z=s.values?s.values[j]:j,w.push([z,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const R=e.LODInfos,k=[];for(j=0;j<R.levels.length;j++)k.push({level:R.levels[j],resolution:R.resolutions[j],scale:96/.0254*R.resolutions[j]});const _=new TileInfo[\"a\" /* default */]({dpi:96,lods:k,format:v,origin:b,size:[f,u],spatialReference:y}),C={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},F=Math.round((x.xmax-x.xmin)/I.x),H=Math.round((x.ymax-x.ymin)/I.y),P=[{maxCol:Math.ceil(F/f)-1,maxRow:Math.ceil(H/u)-1,minCol:0,minRow:0}];let L=2;if(h>0)for(j=0;j<h;j++)P.push({maxCol:Math.ceil(F/L/f)-1,maxRow:Math.ceil(H/L/u)-1,minCol:0,minRow:0}),L*=2;const D=e.mdInfo;return{storageInfo:C,rasterInfo:new RasterInfo[\"a\" /* default */]({width:F,height:H,pixelType:r,bandCount:o,extent:x,spatialReference:y,pixelSize:I,keyProperties:S,statistics:g,histograms:i,multidimensionalInfo:D,colormap:w,storageInfo:new RasterStorageInfo({blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,origin:b,tileInfo:_,firstPyramidLevel:d,maximumPyramidLevel:h,blockBoundary:P})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Object(promiseUtils[\"b\" /* all */])([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":CloudRaster_h.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}if(!i&&o[1]){i=DBFParser.parse(o[1]).recordSet}return FeatureSet[\"default\"].fromJSON(i)}_buildCacheFilePath(e,r,o,i){const s=this.storageInfo.packetSize,a=Math.floor(r/s)*s,n=Math.floor(o/s)*s,l=\"R\"+this._toHexString4(a)+\"C\"+this._toHexString4(n);let f=\"L\";f+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,p=null==i?void 0:i[0];if(!Object(maybe[\"h\" /* isSome */])(m)||!p)return`${this.url}/_alllayers/${f}/${l}.bundle`;let c=m.variables.filter((e=>e.name===p.variableName))[0].dimensions[0].values.indexOf(p.values[0]).toString(16);const u=4-c.length;for(let e=0;e<u;e++)c=\"0\"+c;return c=\"S\"+c,`${this.url}/_alllayers/${p.variableName}/${c}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw\"Invalid level / row / col\";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0})],CloudRaster_g.prototype,\"storageInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],CloudRaster_g.prototype,\"datasetFormat\",void 0),CloudRaster_g=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.CloudRaster\")],CloudRaster_g);var CloudRaster_y=CloudRaster_g;/* harmony default export */ var CloudRaster = (CloudRaster_y);\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/InMemoryRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nlet InMemoryRaster_u=class extends BaseRaster{constructor(){super(...arguments),this.datasetFormat=\"MEMORY\"}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:a,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new Extent[\"a\" /* default */]({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new SpatialReference[\"a\" /* default */]({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new RasterInfo[\"a\" /* default */]({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set(\"rasterInfo\",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url=\"/InMemory/\"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Object(promiseUtils[\"u\" /* resolve */])(i)}async _buildInMemoryRaster(t,s,r){const m=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:m},r):Object(promiseUtils[\"u\" /* resolve */])(Object(pixelUtils[\"m\" /* split */])(t,s,m)),l=Object(maybe[\"h\" /* isSome */])(this.rasterInfo.statistics),h=Object(maybe[\"h\" /* isSome */])(this.rasterInfo.histograms),u=l&&h?Object(promiseUtils[\"u\" /* resolve */])({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Object(promiseUtils[\"u\" /* resolve */])(Object(pixelUtils[\"f\" /* estimateStatisticsHistograms */])(t)),d=await Object(promiseUtils[\"j\" /* eachAlways */])([n,u]);if(!d[0].value&&d[1].value)throw new Error[\"a\" /* default */](\"inmemory-raster:open\",\"failed to build in memory raster\");var f,y;(this._pixelBlockTiles=d[0].value,l)||(this.rasterInfo.statistics=null==(f=d[1].value)?void 0:f.statistics);h&&(this.rasterInfo.histograms=null==(y=d[1].value)?void 0:y.histograms)}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],InMemoryRaster_u.prototype,\"datasetFormat\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],InMemoryRaster_u.prototype,\"data\",void 0),InMemoryRaster_u=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.InMemoryRaster\")],InMemoryRaster_u);var InMemoryRaster_d=InMemoryRaster_u;/* harmony default export */ var InMemoryRaster = (InMemoryRaster_d);\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nfunction PolynomialTransform_n(e,r,t){const{x:o,y:s}=r;if(t<2){return{x:e[0]+o*e[2]+s*e[4],y:e[1]+o*e[3]+s*e[5]}}if(2===t){const r=o*o,t=s*s,i=o*s;return{x:e[0]+o*e[2]+s*e[4]+r*e[6]+i*e[8]+t*e[10],y:e[1]+o*e[3]+s*e[5]+r*e[7]+i*e[9]+t*e[11]}}const i=o*o,n=s*s,p=o*s,a=i*o,f=i*s,c=o*n,l=s*n;return{x:e[0]+o*e[2]+s*e[4]+i*e[6]+p*e[8]+n*e[10]+a*e[12]+f*e[14]+c*e[16]+l*e[18],y:e[1]+o*e[3]+s*e[5]+i*e[7]+p*e[9]+n*e[11]+a*e[13]+f*e[15]+c*e[17]+l*e[19]}}function PolynomialTransform_p(e,r,t){const{xmin:o,ymin:s,xmax:p,ymax:a,spatialReference:f}=r;let c=[];if(t<2)c.push({x:o,y:a}),c.push({x:p,y:a}),c.push({x:o,y:s}),c.push({x:p,y:s});else{let e=10;for(let r=0;r<e;r++)c.push({x:o,y:s+(a-s)*r/(e-1)}),c.push({x:p,y:s+(a-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)c.push({x:o+(p-o)*r/e,y:s}),c.push({x:o+(p-o)*r/e,y:a})}c=c.map((r=>PolynomialTransform_n(e,r,t)));const l=c.map((e=>e.x)),m=c.map((e=>e.y));return new Extent[\"a\" /* default */]({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:f})}let PolynomialTransform_a=class extends JSONSupport[\"a\" /* JSONSupport */]{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get(\"inverseCoefficients\");const r=this._get(\"forwardCoefficients\");return!e&&r&&this.polynomialOrder<2&&(e=function(e){const[r,t,o,s,i,n]=e,p=o*n-i*s,a=i*s-o*n;return[(i*t-r*n)/p,(o*t-r*s)/a,n/p,s/a,-i/p,-o/a]}(r)),e}set inverseCoefficients(e){this._set(\"inverseCoefficients\",e)}forwardTransform(e){if(\"point\"===e.type){const r=PolynomialTransform_n(this.forwardCoefficients,e,this.polynomialOrder);return new Point[\"a\" /* default */]({x:r.x,y:r.y,spatialReference:e.spatialReference})}return PolynomialTransform_p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if(\"point\"===e.type){const r=PolynomialTransform_n(this.inverseCoefficients,e,this.polynomialOrder);return new Point[\"a\" /* default */]({x:r.x,y:r.y,spatialReference:e.spatialReference})}return PolynomialTransform_p(this.inverseCoefficients,e,this.polynomialOrder)}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({json:{write:!0}})],PolynomialTransform_a.prototype,\"polynomialOrder\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({json:{write:!0}})],PolynomialTransform_a.prototype,\"forwardCoefficients\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({dependsOn:[\"forwardCoefficients\"],json:{write:!0}})],PolynomialTransform_a.prototype,\"inverseCoefficients\",null),PolynomialTransform_a=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterTransforms.PolynomialTransform\")],PolynomialTransform_a);var PolynomialTransform_f=PolynomialTransform_a;/* harmony default export */ var PolynomialTransform = (PolynomialTransform_f);\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nfunction xmlUtilities_n(e,t){if(!e||!t)return[];let l=t;t.indexOf(\"/\")>-1?(l=t.slice(0,t.indexOf(\"/\")),t=t.slice(t.indexOf(\"/\")+1)):t=\"\";const r=[];if(t){const u=xmlUtilities_n(e,l);for(let e=0;e<u.length;e++){xmlUtilities_n(u[e],t).forEach((n=>r.push(n)))}return r}const u=e.getElementsByTagNameNS(\"*\",l);if(!u||0===u.length)return[];for(let n=0;n<u.length;n++)r.push(u[n]||u.item[n]);return r}function xmlUtilities_e(t,l){if(!t||!l)return null;let r=l;l.indexOf(\"/\")>-1?(r=l.slice(0,l.indexOf(\"/\")),l=l.slice(l.indexOf(\"/\")+1)):l=\"\";const u=xmlUtilities_n(t,r);return u.length>0?l?xmlUtilities_e(u[0],l):u[0]:null}function xmlUtilities_t(n,t=null){const l=t?xmlUtilities_e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function xmlUtilities_l(e,t){const l=xmlUtilities_n(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),\"\"!==u&&r.push(u));return r}function xmlUtilities_r(n,e=null){return xmlUtilities_t(n,e).split(\" \").map((n=>Number(n)))}function xmlUtilities_u(n,e){return xmlUtilities_l(n,e).map((n=>Number(n)))}function xmlUtilities_o(n,e){const l=xmlUtilities_t(n,e);return Number(l)}function xmlUtilities_i(n,e){var t;const l=null==n||null==(t=n.nodeName)?void 0:t.toLowerCase(),r=e.toLowerCase();return l.slice(l.lastIndexOf(\":\")+1)===r}function xmlUtilities_f(n){return n.nodeName.slice(n.nodeName.lastIndexOf(\":\")+1)}\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nfunction pamParser_i(e,t){if(!e||!t)return null;const n=[];for(let a=0;a<e.length;a++)n.push(e[a]),n.push(t[a]);return n}function pamParser_u(t){if(!t)return null;let n=Number(t);if(!isNaN(n)&&0!==n)return new SpatialReference[\"a\" /* default */]({wkid:n});const a=t.replace(/\\]/g,\"[\").replace(/\\\"/g,\"\").split(\"[\").map((e=>e.trim())).filter((e=>\"\"!==e)),r=a[a.length-1].split(\",\");return\"EPSG\"!==r[0]||(n=Number(r[1]),isNaN(n)||0===n)?new SpatialReference[\"a\" /* default */]({wkt:t}):new SpatialReference[\"a\" /* default */]({wkid:n})}function pamParser_f(e){var f;if(\"pamdataset\"!==(null==e||null==(f=e.documentElement.tagName)?void 0:f.toLowerCase()))return{};const c={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(xmlUtilities_i(e,\"SRS\")){if(!c.spatialReference){const t=xmlUtilities_t(e);c.spatialReference=pamParser_u(t)}}else if(xmlUtilities_i(e,\"Metadata\"))if(\"xml:ESRI\"===e.getAttribute(\"domain\")){const{spatialReference:t,transform:a}=function(e){var t;const a=xmlUtilities_e(e,\"GeodataXform\"),f=pamParser_u(xmlUtilities_o(a,\"SpatialReference/WKID\")||xmlUtilities_t(a,\"SpatialReference/WKT\"));if(\"typens:PolynomialXform\"!==a.getAttribute(\"xsi:type\"))return{spatialReference:f,transform:null};const c=null!=(t=xmlUtilities_o(a,\"PolynomialOrder\"))?t:1,m=xmlUtilities_u(a,\"CoeffX/Double\"),d=xmlUtilities_u(a,\"CoeffY/Double\"),p=xmlUtilities_u(a,\"InverseCoeffX/Double\"),I=xmlUtilities_u(a,\"InverseCoeffY/Double\"),S=pamParser_i(m,d),g=pamParser_i(p,I);return{spatialReference:f,transform:new PolynomialTransform({polynomialOrder:c,forwardCoefficients:S,inverseCoefficients:g})}}(e);c.transform=a,c.spatialReference||(c.spatialReference=t)}else{xmlUtilities_n(e,\"MDI\").forEach((e=>c.metadata[e.getAttribute(\"key\")]=xmlUtilities_t(e)))}else if(xmlUtilities_i(e,\"PAMRasterBand\")){const t=function(e){var t;const l=xmlUtilities_o(e,\"NoDataValue\"),o=xmlUtilities_e(e,\"Histograms/HistItem\"),i=xmlUtilities_o(o,\"HistMin\"),u=xmlUtilities_o(o,\"HistMax\"),f=xmlUtilities_o(o,\"BucketCount\"),c=null==(t=xmlUtilities_t(o,\"HistCounts\"))?void 0:t.split(\"|\").map((e=>Number(e)));let m,d,p,I;xmlUtilities_n(e,\"Metadata/MDI\").forEach((e=>{var t;const n=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute(\"key\").toUpperCase()){case\"STATISTICS_MINIMUM\":m=n;break;case\"STATISTICS_MAXIMUM\":d=n;break;case\"STATISTICS_MEAN\":p=n;break;case\"STATISTICS_STDDEV\":I=n}}));const S=xmlUtilities_o(e,\"Metadata/SourceBandIndex\");return{noDataValue:l,histogram:null!=c&&c.length&&null!=m&&null!=d?{min:i,max:u,size:f||c.length,counts:c}:null,sourceBandIndex:S,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:I}:null}}(e);null!=t.sourceBandIndex&&null==c.rasterBands[t.sourceBandIndex]?c.rasterBands[t.sourceBandIndex]=t:c.rasterBands.push(t)}}));const m=c.rasterBands;if(m){const e=!!m[0].statistics;c.statistics=e?m.map((e=>e.statistics)):null;const t=!!m[0].histogram;c.histograms=t?m.map((e=>e.histogram)):null}return c}\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageAuxRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nlet ImageAuxRaster_d=class extends BaseRaster{async open(t){await this.init();const r=await this._fetchData(t);let{spatialReference:e,statistics:s,histograms:o,transform:a}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new SpatialReference[\"a\" /* default */]({wkid:3857})),null!=o&&o.length&&null==s&&(s=Object(pixelUtils[\"e\" /* estimateStatisticsFromHistograms */])(o));const{width:m,height:c}=r;let u=new Extent[\"a\" /* default */]({xmin:-.5,ymin:.5-c,xmax:m-.5,ymax:.5,spatialReference:e});const h=a?a.forwardTransform(u):u;let d=!0;if(a){const t=a.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(a=null,u=h)}const x=new InMemoryRaster({data:{extent:h,nativeExtent:u,transform:a,pixelBlock:r,statistics:s,histograms:o,keyProperties:{DateType:\"Processed\"},isPseudoSpatialReference:i}});await x.open(),this._set(\"rasterInfo\",x.rasterInfo),this._inMemoryRaster=x}fetchRawTile(t,r,e,s={}){return this._inMemoryRaster.fetchRawTile(t,r,e,s)}async _fetchData(t){const{data:r}=await this.request(this.url,{responseType:\"array-buffer\",signal:null==t?void 0:t.signal}),e=Object(RasterCodec[\"b\" /* getFormat */])(r).toUpperCase();if(\"JPG\"!==e&&\"PNG\"!==e&&\"GIF\"!==e&&\"BMP\"!==e)throw new Error[\"a\" /* default */](\"image-aux-raster:open\",\"the data is not a supported format\");this._set(\"datasetFormat\",e);return await this.decodePixelBlock(r,{format:\"jpg\",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,s;const o=Object(maybe[\"n\" /* unwrap */])(null==t?void 0:t.signal),n=null!=(e=this.ioConfig.skipExtensions)?e:[],l=n.indexOf(\"aux.xml\")>-1?null:this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:o}),m=this.datasetFormat,p=\"JPG\"===m?\"jgw\":\"PNG\"===m?\"pgw\":\"BMP\"===m?\"bpw\":null,c=n.indexOf(p)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf(\".\"))+\".\"+p,{responseType:\"text\",signal:o}),f=await Object(promiseUtils[\"j\" /* eachAlways */])([l,c]);if(null!=o&&o.aborted)throw Object(promiseUtils[\"e\" /* createAbortError */])();const d=pamParser_f(null==(s=f[0].value)?void 0:s.data);if(!d.transform){const t=f[1].value?f[1].value.data.split(\"\\n\").slice(0,6).map((t=>Number(t))):null;d.transform=6===(null==t?void 0:t.length)?new PolynomialTransform({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return d}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],ImageAuxRaster_d.prototype,\"datasetFormat\",void 0),ImageAuxRaster_d=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.ImageAuxRaster\")],ImageAuxRaster_d);var ImageAuxRaster_x=ImageAuxRaster_d;/* harmony default export */ var ImageAuxRaster = (ImageAuxRaster_x);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/serviceTileInfoProperty.js\nvar serviceTileInfoProperty = __webpack_require__(\"q2iW\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/TilemapCache.js + 1 modules\nvar TilemapCache = __webpack_require__(\"llFo\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nlet ImageServerRaster_g=class extends BaseRaster{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat=\"RasterTileServer\"}async open(e){await this.init();const i=e&&e.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:i});s.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const l=s.data;this.sourceJSON=l;const o=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];if(this.tileType=l.cacheType,null==this.tileType&&(o.indexOf(l.tileInfo.format.toLowerCase())>-1?this.tileType=\"Map\":\"lerc\"===l.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),!l)throw new Error[\"a\" /* default */](\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!l.tileInfo)throw new Error[\"a\" /* default */](\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this.datasetName=l.name.slice(l.name.indexOf(\"/\")+1);const n=await this._fetchRasterInfo({signal:i});if(!Object(maybe[\"h\" /* isSome */])(n))throw new Error[\"a\" /* default */](\"image-server-raster:open\",\"cannot initialize image service\");{const e=\"Map\"===this.tileType?Object(serviceTileInfoProperty[\"a\" /* readServiceTileInfo */])(l.tileInfo,l):TileInfo[\"a\" /* default */].fromJSON(l.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let a,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));\"Map\"!==this.tileType&&0!==l.maxScale&&(\"Raster\"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-l.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>l.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=o);const m=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));\"Map\"===this.tileType?this._levelOffset=e.lods[0].level:0!==l.minScale&&\"Elevation\"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-l.minScale)<s))[0],this._levelOffset=r.level-m.level),r||(r=m);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-h)<s)))&&(i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=a.level-r.level,[f,d]=e.size,x=e.origin;let{x:g,y:v}=i;const w=[{minCol:Math.floor((t.xmin-x.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-x.x-.1*g)/f/g),minRow:Math.floor((x.y-t.ymax+.1*v)/d/v),maxRow:Math.floor((x.y-t.ymin-.1*v)/d/v)}];if(p>0)for(let e=0;e<p;e++)g*=2,v*=2,w.push({minCol:Math.floor((t.xmin-x.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-x.x-.1*g)/f/g),minRow:Math.floor((x.y-t.ymax+.1*v)/d/g),maxRow:Math.floor((x.y-t.ymin-.1*v)/d/g)});n.storageInfo=new RasterStorageInfo({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:w}),this._set(\"rasterInfo\",n)}if(l.capabilities.toLowerCase().indexOf(\"tilemap\")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:Object(urlUtils[\"I\" /* urlToObject */])(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new TilemapCache[\"a\" /* TilemapCache */]({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:r,pixelSize:l}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${o}/${t}/${i}`,m=this._slices?{sliceId:s.sliceId||0}:null,{data:h}=await this.request(n,{query:m,responseType:\"array-buffer\",signal:s.signal});if(!h)return null;const c=await this.decodePixelBlock(h,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType}),u=a.blockBoundary[e];if(\"jpg\"!==a.compression||i>u.minCol&&i<u.maxCol&&t>u.minRow&&t<u.maxRow)return c;const{origin:p,blockWidth:f,blockHeight:y}=a,x=Math.pow(2,e),g=Math.round((r.xmin-p.x)/(l.x*x))%f,v=Math.round((r.xmax-p.x)/(l.x*x))%f,w=Math.round((p.y-r.ymax)/(l.x*x))%y,j=Math.round((p.y-r.ymin)/(l.x*x))%y,S=i===u.minCol?g:0,b=t===u.minRow?w:0,M=i===u.maxCol?v:f,I=t===u.maxRow?j:y;return Object(pixelUtils[\"l\" /* setValidBoundary */])(c,{x:S,y:b},{width:M-S,height:I-b}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Object(promiseUtils[\"b\" /* all */])([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let r=a-s+this._levelOffset;const l=i.srcLocation;for(;r>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,s++,i=this.identifyPixelLocation(l,s,t.datumTransformation),null===i)return null}return-1===r||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=SpatialReference[\"a\" /* default */].fromJSON(t.spatialReference||t.extent.spatialReference);if(\"Map\"===this.tileType)return new RasterInfo[\"a\" /* default */]({width:i,height:s,bandCount:3,extent:Extent[\"a\" /* default */].fromJSON(t.extent),spatialReference:a,pixelSize:new Point[\"a\" /* default */]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}});const{slice:r,signal:c}=e,u=!!t.hasRasterAttributeTable&&this.request(this.url+\"/rasterAttributeTable\",{query:{slice:r,f:\"json\"},signal:c}).then((e=>FeatureSet[\"default\"].fromJSON(e.data))).catch((()=>null)),p=!!t.hasColormap&&this.request(this.url+\"/colormap\",{query:{slice:r,f:\"json\"},signal:c}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),d=!!t.hasHistograms&&this.request(this.url+\"/histograms\",{query:{slice:r,f:\"json\"},signal:c}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),y=this.request(this.url+\"/keyProperties\",{query:{f:\"json\"},signal:c}).then((e=>e.data)).catch((()=>{})),x=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),g=!!t.hasMultidimensions&&this.request(this.url+\"/slices\",{query:{f:\"json\"},signal:c}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Object(promiseUtils[\"b\" /* all */])([u,p,d,y,x,g]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new RasterInfo[\"a\" /* default */]({width:i,height:s,bandCount:t.bandCount,extent:Extent[\"a\" /* default */].fromJSON(t.extent),spatialReference:a,pixelSize:new Point[\"a\" /* default */]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+\"/multidimensionalInfo\",{query:{f:\"json\"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],ImageServerRaster_g.prototype,\"datasetFormat\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],ImageServerRaster_g.prototype,\"tileType\",void 0),ImageServerRaster_g=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],ImageServerRaster_g);var ImageServerRaster_v=ImageServerRaster_g;/* harmony default export */ var ImageServerRaster = (ImageServerRaster_v);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/PixelBlock.js\nvar PixelBlock = __webpack_require__(\"Piei\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFormats/utils.js\nvar utils = __webpack_require__(\"5VpP\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst MRFRaster_w=new Map;MRFRaster_w.set(\"Int8\",\"s8\"),MRFRaster_w.set(\"UInt8\",\"u8\"),MRFRaster_w.set(\"Int16\",\"s16\"),MRFRaster_w.set(\"UInt16\",\"u16\"),MRFRaster_w.set(\"Int32\",\"s32\"),MRFRaster_w.set(\"UInt32\",\"u32\"),MRFRaster_w.set(\"Float32\",\"f32\"),MRFRaster_w.set(\"Float64\",\"f32\"),MRFRaster_w.set(\"Double64\",\"f32\");const MRFRaster_I=new Map;MRFRaster_I.set(\"lerc\",\".lrc\"),MRFRaster_I.set(\"none\",\".til\"),MRFRaster_I.set(\"deflate\",\".pzp\"),MRFRaster_I.set(\"jpeg\",\".jzp\");let MRFRaster_b=class extends BaseRaster{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(t){var s;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const o=t?Object(maybe[\"n\" /* unwrap */])(t.signal):null,i=await this.request(this.url,{responseType:\"xml\",signal:o}),{rasterInfo:a,files:n}=this._parseHeader(i.data);if(-1===(null==(s=this.ioConfig.skipExtensions)?void 0:s.indexOf(\"aux.xml\"))){const e=await this._fetchAuxiliaryData(t);var l;if(null!=e)a.statistics=null!=(l=e.statistics)?l:a.statistics,a.histograms=e.histograms,e.histograms&&!Object(maybe[\"h\" /* isSome */])(a.statistics)&&(a.statistics=Object(pixelUtils[\"e\" /* estimateStatisticsFromHistograms */])(e.histograms))}this._set(\"rasterInfo\",a),this._files=n;const p=await this.request(n.index,{responseType:\"array-buffer\",signal:o});this._storageIndex=this._parseIndex(p.data);let c,f,m=0,u=-1;const{blockWidth:g,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,x=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:I,bandCount:b}=this.rasterInfo,M=[],j=\"none\"===y?1:b;for(;m<this._storageIndex.length;)u++,c=Math.ceil(w/g/Math.pow(x,u)),f=Math.ceil(I/d/Math.pow(x,u)),m+=c*f*j*4,M.push({maxRow:f,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=M,u>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=u),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:i,blockBoundary:n,compression:l}=this.rasterInfo.storageInfo,p=n[t];if(!p||p.maxRow<e||p.maxCol<r||p.minRow>e||p.minCol>r)return null;const{bandCount:f,pixelType:m}=this.rasterInfo,{ranges:h,actualTileWidth:u,actualTileHeight:g}=this._getTileLocation(t,e,r);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const t=new Uint8Array(o*i);return new PixelBlock[\"a\" /* default */]({width:o,height:i,pixels:null,mask:t,validPixelCount:0})}const{bandIds:d}=this.ioConfig,y=\"none\"===l?1:f,x=[];let w=0;for(w=0;w<y;w++)(!d||d.indexOf[w]>-1)&&x.push(this.request(this._files.data,{range:{from:h[w].from,to:h[w].to},responseType:\"array-buffer\",signal:s.signal}));const I=await Object(promiseUtils[\"b\" /* all */])(x),b=I.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),M=new Uint8Array(b);let j=0;for(w=0;w<y;w++)M.set(new Uint8Array(I[w].data),j),j+=I[w].data.byteLength;const A=\"lerc\"===this.rasterInfo.storageInfo.compression?\"lerc\":\"bip\",R=await this.decodePixelBlock(M.buffer,{width:o,height:i,format:A,pixelType:m});let _=0,F=0;if(u!==o||g!==i){let t=R.mask;if(t)for(w=0;w<i;w++)if(F=w*o,w<g)for(_=u;_<o;_++)t[F+_]=0;else for(_=0;_<o;_++)t[F+_]=0;else for(t=new Uint8Array(o*i),R.mask=t,w=0;w<g;w++)for(F=w*o,_=0;_<u;_++)t[F+_]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw\"invalid array buffer must be multiples of 16\";let e,r,s,o,i,a;if(utils[\"a\" /* isPlatformLittleEndian */]){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i,compression:a}=this.rasterInfo.storageInfo,{width:n,height:l,bandCount:p}=this.rasterInfo,c=\"none\"===a?1:p;let f,m,h,u=0,g=0;for(h=0;h<t;h++)g=Math.pow(i,h),f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=f*m;g=Math.pow(i,t),f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=e*f+r,u*=4*c;const d=this._storageIndex.subarray(u,u+4*c);let y=0,x=0;const w=[];for(let t=0;t<c;t++)y=d[4*t+0]*Math.pow(2,32)+d[4*t+1],x=y+d[4*t+2]*Math.pow(2,32)+d[4*t+3],w.push({from:y,to:x});return{ranges:w,actualTileWidth:r<f-1?s:Math.ceil(n/g)-s*(f-1),actualTileHeight:e<m-1?o:Math.ceil(l/g)-o*(m-1)}}_parseHeader(t){const e=xmlUtilities_e(t,\"MRF_META/Raster\");if(!e)throw new Error[\"a\" /* default */](\"mrf:open\",\"not a valid MRF format\");const r=xmlUtilities_e(e,\"Size\"),s=parseInt(r.getAttribute(\"x\"),10),o=parseInt(r.getAttribute(\"y\"),10),a=parseInt(r.getAttribute(\"c\"),10),c=(xmlUtilities_t(e,\"Compression\")||\"none\").toLowerCase();if(!c||-1===[\"none\",\"lerc\"].indexOf(c))throw new Error[\"a\" /* default */](\"mrf:open\",\"currently does not support compression \"+c);const m=xmlUtilities_t(e,\"DataType\")||\"UInt8\",h=MRFRaster_w.get(m);if(null==h)throw new Error[\"a\" /* default */](\"mrf:open\",\"currently does not support pixel type \"+m);const g=xmlUtilities_e(e,\"PageSize\"),x=parseInt(g.getAttribute(\"x\"),10),b=parseInt(g.getAttribute(\"y\"),10),M=xmlUtilities_e(e,\"DataValues\");let j,A;M&&(A=M.getAttribute(\"NoData\"),null!=A&&(j=A.trim().split(\" \").map((t=>parseFloat(t)))));if(xmlUtilities_e(t,\"MRF_META/CachedSource\"))throw new Error[\"a\" /* default */](\"mrf:open\",\"currently does not support MRF referencing other data files\");const R=xmlUtilities_e(t,\"MRF_META/GeoTags\"),_=xmlUtilities_e(R,\"BoundingBox\");if(null==_)throw new Error[\"a\" /* default */](\"mrf:open\",\"missing node MRF_META/GeoTags/BoundingBox\");const F=parseFloat(_.getAttribute(\"minx\")),T=parseFloat(_.getAttribute(\"miny\")),k=parseFloat(_.getAttribute(\"maxx\")),C=parseFloat(_.getAttribute(\"maxy\")),U=xmlUtilities_t(R,\"Projection\"),S=xmlUtilities_t(t,\"datafile\"),v=xmlUtilities_t(t,\"IndexFile\");let L;\"LOCAL_CS[]\"!==U&&(L=new SpatialReference[\"a\" /* default */]({wkt:U}));const B=new Extent[\"a\" /* default */](F,T,k,C);B.spatialReference=L;const E=xmlUtilities_e(t,\"MRF_META/Rsets\"),H=parseInt(E&&E.getAttribute(\"scale\")||\"2\",10),P=new RasterStorageInfo({origin:new Point[\"a\" /* default */]({x:B.xmin,y:B.ymax,spatialReference:L}),blockWidth:x,blockHeight:b,pyramidBlockWidth:x,pyramidBlockHeight:b,compression:c,pyramidScalingFactor:H}),D=new Point[\"a\" /* default */]({x:(k-F)/s,y:(C-T)/o,spatialReference:L});return{rasterInfo:new RasterInfo[\"a\" /* default */]({width:s,height:o,extent:B,spatialReference:L,bandCount:a,pixelType:h,pixelSize:D,noDataValue:j,storageInfo:P}),files:{mrf:this.url,index:v||this.url.replace(\".mrf\",\".idx\"),data:S||this.url.replace(\".mrf\",MRFRaster_I.get(c))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==t?void 0:t.signal});return pamParser_f(e)}catch{return null}}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],MRFRaster_b.prototype,\"_files\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],MRFRaster_b.prototype,\"_storageIndex\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],MRFRaster_b.prototype,\"datasetFormat\",void 0),MRFRaster_b=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterIO.MRFRaster\")],MRFRaster_b);var MRFRaster_M=MRFRaster_b;/* harmony default export */ var MRFRaster = (MRFRaster_M);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFormats/TiffTags.js\nvar TiffTags = __webpack_require__(\"D/0F\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFormats/TiffDecoder.js + 1 modules\nvar TiffDecoder = __webpack_require__(\"bT0G\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst TIFFRaster_I=function(t,e){const r=t.get(e);return r&&r.values},TIFFRaster_T=function(t,e){const r=t.get(e);return r&&r.values[0]};let TIFFRaster_x=class extends BaseRaster{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async open(t){var i;await this.init();const s=t?Object(maybe[\"n\" /* unwrap */])(t.signal):null,{data:l}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:s});if(!l)throw new Error[\"a\" /* default */](\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{littleEndian:h,firstIFD:m,isBigTiff:y}=Object(TiffDecoder[\"f\" /* parseSignature */])(l),g=[];await this.readIFDs(g,l,h,m,0,y?8:4,s);const I=Object(TiffDecoder[\"c\" /* getImageInfo */])(g),{width:T,height:x,tileWidth:w,tileHeight:F,planes:E,pixelType:S,compression:b,firstPyramidLevel:_,maximumPyramidLevel:v,pyramidBlockWidth:j,pyramidBlockHeight:B,tileBoundary:k,metadata:D}=I,L=Extent[\"a\" /* default */].fromJSON(I.extent),R=L.spatialReference,O=new Point[\"a\" /* default */](L?{x:L.xmin,y:L.ymax,spatialReference:R}:{x:0,y:0}),z=new RasterStorageInfo({blockWidth:w,blockHeight:F,pyramidBlockWidth:j,pyramidBlockHeight:B,compression:b,origin:O,firstPyramidLevel:_,maximumPyramidLevel:v,blockBoundary:k}),H=new Point[\"a\" /* default */]({x:(L.xmax-L.xmin)/T,y:(L.ymax-L.ymin)/x,spatialReference:R}),G=D?{BandProperties:D.bandProperties,DataType:D.dataType}:{},P=new RasterInfo[\"a\" /* default */]({width:T,height:x,bandCount:E,pixelType:S,compression:b,pixelSize:H,storageInfo:z,spatialReference:R,keyProperties:G,extent:L,statistics:D?D.statistics:null});if(-1===(null==(i=this.ioConfig.skipExtensions)?void 0:i.indexOf(\"aux.xml\"))){const e=await this._fetchAuxiliaryData(t);var q;if(null!=e)P.statistics=null!=(q=e.statistics)?q:P.statistics,P.histograms=e.histograms,e.histograms&&!Object(maybe[\"h\" /* isSome */])(P.statistics)&&(P.statistics=Object(pixelUtils[\"e\" /* estimateStatisticsFromHistograms */])(e.histograms))}if(this._set(\"rasterInfo\",P),this._headerInfo={littleEndian:h,isBigTiff:y,ifds:g,...I},!this._headerInfo.isSupported)throw new Error[\"a\" /* default */](\"tiffraster:open\",\"this tiff is not supported: \"+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(t,e,r,i={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:s}=this.rasterInfo.storageInfo,a=t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,n=s[t];if(!n||n.maxRow<e||n.maxCol<r||n.minRow>e||n.minCol>r)return null;const f=this.getTileLocation(t,e,r);if(!f)return null;const{range:l,actualTileWidth:u,actualTileHeight:p,ifd:h}=f,{data:m}=await this.request(this.url,{range:l,responseType:\"array-buffer\",signal:i.signal}),c=await this.decodePixelBlock(m,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:h,offset:0,size:0},width:a,height:o,planes:null,pixelType:null});let d,y,g;if(u!==a||p!==o){let t=c.mask;if(t)for(d=0;d<o;d++)if(g=d*a,d<p)for(y=u;y<a;y++)t[g+y]=0;else for(y=0;y<a;y++)t[g+y]=0;else for(t=new Uint8Array(a*o),c.mask=t,d=0;d<p;d++)for(g=d*a,y=0;y<u;y++)t[g+y]=1}return c}async readIFDs(t,e,r,i,s,a=4,o){if(!i)return null;if(i>=e.byteLength||i<0){e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:\"array-buffer\",signal:o})).data,s=i+s,i=0}const n=await this.readIFD(e,r,i,s,TiffTags[\"a\" /* default */].TIFF_TAGS,a,o);if(t.push(n.ifd),!n.nextIFD)return null;await this.readIFDs(t,e,r,n.nextIFD-s,s,a,o)}async readIFD(t,e,r,i,s=TiffTags[\"a\" /* default */].TIFF_TAGS,a=4,o){if(!t)return null;const n=Object(TiffDecoder[\"e\" /* parseIFD */])(t,e,r,i,s,a);if(n.success){const r=[];if(n.ifd.forEach((t=>{t.values||r.push(t)})),r.length>0){const s=r.map((t=>t.offlineOffsetSize)),a=Math.min.apply(null,s.map((t=>t[0])));if(Math.min.apply(null,s.map((t=>t[0]+t[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:\"array-buffer\",signal:o});t=s,i=a,r.forEach((r=>Object(TiffDecoder[\"d\" /* parseFieldValues */])(t,e,r,i)))}}if(n.ifd.has(\"GEOKEYDIRECTORY\")){const r=n.ifd.get(\"GEOKEYDIRECTORY\"),s=r.values;if(s&&s.length>4){const a=s[0]+\".\"+s[1]+\".\"+s[2],n=await this.readIFD(t,e,r.valueOffset+6-i,i,TiffTags[\"a\" /* default */].GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return n}if(n.requiredBufferSize&&n.requiredBufferSize!==t.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+n.requiredBufferSize+4},responseType:\"array-buffer\",signal:o});return(t=r.data).byteLength<n.requiredBufferSize?null:this.readIFD(t,e,0,i,TiffTags[\"a\" /* default */].TIFF_TAGS,4,o)}}getTileLocation(t,e,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===t?0:t-(i-1),o=this._headerInfo.ifds[a];if(!o)return null;const n=TIFFRaster_I(o,\"TILEOFFSETS\");if(void 0===n)return null;const f=TIFFRaster_I(o,\"TILEBYTECOUNTS\"),{minRow:l,minCol:u,maxRow:p,maxCol:h}=s[a];if(e>p||r>h||e<l||r<u)return null;const m=TIFFRaster_T(o,\"IMAGEWIDTH\"),c=TIFFRaster_T(o,\"IMAGELENGTH\"),d=TIFFRaster_T(o,\"TILEWIDTH\"),y=TIFFRaster_T(o,\"TILELENGTH\"),g=e*(h+1)+r,x=n[g],w=f[g];if(null==x||null==w)return null;return{range:{from:x,to:x+w-1},ifd:o,actualTileWidth:r===h?m%d:d,actualTileHeight:e===p?c%y:y}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==t?void 0:t.signal});return pamParser_f(e)}catch{return null}}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],TIFFRaster_x.prototype,\"_files\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],TIFFRaster_x.prototype,\"_headerInfo\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],TIFFRaster_x.prototype,\"_bufferSize\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:String,json:{write:!0}})],TIFFRaster_x.prototype,\"datasetFormat\",void 0),TIFFRaster_x=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.support.rasterDatasets.TIFFRaster\")],TIFFRaster_x);var TIFFRaster_w=TIFFRaster_x;/* harmony default export */ var TIFFRaster = (TIFFRaster_w);\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst RasterFactory_c=new Map;RasterFactory_c.set(\"CRF\",{desc:\"Cloud Raster Format\",constructor:CloudRaster}),RasterFactory_c.set(\"MRF\",{desc:\"Meta Raster Format\",constructor:MRFRaster}),RasterFactory_c.set(\"TIFF\",{desc:\"GeoTIFF\",constructor:TIFFRaster}),RasterFactory_c.set(\"RasterTileServer\",{desc:\"Raster Tile Server\",constructor:ImageServerRaster}),RasterFactory_c.set(\"JPG\",{desc:\"JPG Raster Format\",constructor:ImageAuxRaster}),RasterFactory_c.set(\"PNG\",{desc:\"PNG Raster Format\",constructor:ImageAuxRaster}),RasterFactory_c.set(\"GIF\",{desc:\"GIF Raster Format\",constructor:ImageAuxRaster}),RasterFactory_c.set(\"BMP\",{desc:\"BMP Raster Format\",constructor:ImageAuxRaster});/* harmony default export */ var RasterFactory = (class{static get supportedFormats(){const t=new Set;return RasterFactory_c.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s,sourceJSON:o}=r;let a=r.datasetFormat;null==a&&e.lastIndexOf(\".\")&&(a=e.slice(e.lastIndexOf(\".\")+1).toUpperCase()),\"OVR\"===a||\"TIF\"===a?a=\"TIFF\":\"JPG\"!==a&&\"JPEG\"!==a&&\"JFIF\"!==a||(a=\"JPG\"),e.toLowerCase().indexOf(\"/imageserver\")>-1&&-1===e.toLowerCase().indexOf(\"/wcsserver\")&&(a=\"RasterTileServer\");const n={url:e,sourceJSON:o,datasetFormat:a,ioConfig:s||{bandIds:null,sampling:null}};let i,u;if(this.supportedFormats.has(a))return i=RasterFactory_c.get(a).constructor,u=new i(n),await u.open({signal:r.signal}),u;if(a)throw new Error[\"a\" /* default */](\"rasterfactory:open\",\"not a supported format \"+a);const l=Array.from(RasterFactory_c.keys());let m=0;const F=function(){return a=l[m++],a?(i=RasterFactory_c.get(a).constructor,u=new i(n),u.open({signal:r.signal}).then((()=>u)).catch((()=>F()))):null};return F()}static register(t,r,e){RasterFactory_c.has(t.toUpperCase())||RasterFactory_c.set(t.toUpperCase(),{desc:r,constructor:e})}});\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/ImageryTileLayer.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst ImageryTileLayer_I=Object(jsonMap[\"b\" /* strict */])()({RSP_NearestNeighbor:\"nearest\",RSP_BilinearInterpolation:\"bilinear\",RSP_CubicConvolution:\"cubic\",RSP_Majority:\"majority\"});function ImageryTileLayer_O(){return{enabled:!this.loaded||\"RasterTileServer\"===this.raster.datasetFormat&&\"Raster\"===this.raster.tileType}}let ImageryTileLayer_x=class extends(Object(BlendLayer[\"a\" /* BlendLayer */])(Object(ScaleRangeLayer[\"a\" /* ScaleRangeLayer */])(Object(RefreshableLayer[\"a\" /* RefreshableLayer */])(Object(OperationalLayer[\"a\" /* OperationalLayer */])(Object(PortalLayer[\"a\" /* PortalLayer */])(ImageryTileMixin_J(Object(MultiOriginJSONSupport[\"a\" /* MultiOriginJSONMixin */])(Layer[\"a\" /* default */])))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode=\"show\",this.sourceJSON=null,this.version=null,this.title=null,this.type=\"imagery-tile\",this.operationalLayerType=\"ArcGISTiledImageServiceLayer\",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,r){return\"string\"==typeof e?{url:e,...r}:e}load(e){const t=Object(maybe[\"h\" /* isSome */])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Image Service\"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),Object(promiseUtils[\"u\" /* resolve */])(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,r;let t=[new Field[\"a\" /* default */]({name:\"Raster.ServicePixelValue\",alias:\"Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields;if(o){const e=o.filter((e=>\"oid\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=\"Raster.\"+e.name,r}));t=t.concat(e)}return t}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}readRenderer(e,r,t){const o=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=Object(rasterRenderers[\"b\" /* read */])(o,t)||void 0;if(null!=i)return i}createPopupTemplate(e){return Object(popupUtils[\"a\" /* createPopupTemplate */])(this,e)}write(e,r){const{raster:t}=this;if(this.loaded?\"RasterTileServer\"===t.datasetFormat&&(\"Raster\"===t.tileType||\"Map\"===t.tileType):this.url&&/\\/ImageServer(\\/|\\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||\"operational-layers\"}`;r.messages.push(new Error[\"a\" /* default */](\"layer:unsupported\",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await RasterFactory.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new Error[\"a\" /* default */](\"imagery-tile-layer:load\",\"cannot load resources on \"+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set(\"version\",this.sourceJSON.currentVersion),this._set(\"copyright\",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),\"Map\"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],ImageryTileLayer_x.prototype,\"ioConfig\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:[ensureType[\"a\" /* Integer */]],json:{write:{overridePolicy:ImageryTileLayer_O}}})],ImageryTileLayer_x.prototype,\"bandIds\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({json:{write:{overridePolicy:ImageryTileLayer_O}}}),Object(enumeration[\"a\" /* enumeration */])(ImageryTileLayer_I)],ImageryTileLayer_x.prototype,\"interpolation\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({json:{write:!0}})],ImageryTileLayer_x.prototype,\"multidimensionalDefinition\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])(commonProperties[\"d\" /* legendEnabled */])],ImageryTileLayer_x.prototype,\"legendEnabled\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ImageryTileLayer_x.prototype,\"isReference\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:[\"show\",\"hide\"]})],ImageryTileLayer_x.prototype,\"listMode\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],ImageryTileLayer_x.prototype,\"sourceJSON\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0})],ImageryTileLayer_x.prototype,\"version\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])()],ImageryTileLayer_x.prototype,\"title\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0,json:{read:!1}})],ImageryTileLayer_x.prototype,\"type\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:[\"ArcGISTiledImageServiceLayer\"]})],ImageryTileLayer_x.prototype,\"operationalLayerType\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:Boolean,value:!0,json:{read:{source:\"disablePopup\",reader:(e,r)=>!r.disablePopup},write:{target:\"disablePopup\",overridePolicy:ImageryTileLayer_O,writer(e,r,t){r[t]=!e}}}})],ImageryTileLayer_x.prototype,\"popupEnabled\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({type:PopupTemplate[\"a\" /* default */],json:{read:{source:\"popupInfo\"},write:{target:\"popupInfo\",overridePolicy:ImageryTileLayer_O}}})],ImageryTileLayer_x.prototype,\"popupTemplate\",void 0),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0,dependsOn:[\"title\"]})],ImageryTileLayer_x.prototype,\"defaultPopupTemplate\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({readOnly:!0,type:[Field[\"a\" /* default */]],dependsOn:[\"rasterInfo\"]})],ImageryTileLayer_x.prototype,\"fields\",null),Object(tslib_es6[\"a\" /* _ */])([Object(property[\"b\" /* property */])({types:rasterRenderers[\"a\" /* rasterRendererTypes */],json:{name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:ImageryTileLayer_O},origins:{\"web-scene\":{types:rasterRenderers[\"c\" /* websceneRasterRendererTypes */],name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type})}}}}})],ImageryTileLayer_x.prototype,\"renderer\",null),Object(tslib_es6[\"a\" /* _ */])([Object(reader[\"a\" /* reader */])(\"renderer\")],ImageryTileLayer_x.prototype,\"readRenderer\",null),ImageryTileLayer_x=Object(tslib_es6[\"a\" /* _ */])([Object(subclass[\"a\" /* subclass */])(\"esri.layers.ImageryTileLayer\")],ImageryTileLayer_x);var ImageryTileLayer_L=ImageryTileLayer_x;/* harmony default export */ var ImageryTileLayer = __webpack_exports__[\"default\"] = (ImageryTileLayer_L);\n\n\n/***/ })\n\n}]);","inputSourceMap":null}