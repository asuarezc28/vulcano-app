{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{LfYK:function(e,t,i){\"use strict\";i.r(t),i.d(t,\"ElevationQuery\",function(){return E}),i.d(t,\"GeometryDescriptor\",function(){return q}),i.d(t,\"getFinestLodIndex\",function(){return j});var n=i(\"srIe\"),s=i(\"zlDU\"),o=i(\"9MzC\"),a=i(\"SuVq\"),l=i(\"V9wi\"),r=i(\"UhwK\"),c=i(\"eSsm\"),u=i(\"gEht\"),h=i(\"kYAx\"),p=i(\"gYg2\"),f=(i(\"wSAH\"),i(\"6S2I\")),m=i(\"l4ZG\"),d=i(\"IXLn\");i(\"4GrV\");const y=f.a.getLogger(\"esri.layers.support.ElevationSampler\");class x{queryElevation(e){return function(e,t){const i=w(e,t.spatialReference);if(!i)return null;switch(e.type){case\"point\":!function(e,t,i){e.z=i.elevationAt(t)||0}(e,i,t);break;case\"polyline\":!function(e,t,i){g.spatialReference=t.spatialReference;const n=e.hasM&&!e.hasZ;for(let s=0;s<e.paths.length;s++){const o=e.paths[s],a=t.paths[s];for(let e=0;e<o.length;e++){const t=o[e],s=a[e];g.x=s[0],g.y=s[1];const l=i.elevationAt(g)||0;n&&(t[3]=t[2]),t[2]=l}}e.hasZ=!0}(e,i,t);break;case\"multipoint\":!function(e,t,i){g.spatialReference=t.spatialReference;const n=e.hasM&&!e.hasZ;for(let s=0;s<e.points.length;s++){const o=e.points[s],a=t.points[s];g.x=a[0],g.y=a[1];const l=i.elevationAt(g)||0;n&&(o[3]=o[2]),o[2]=l}e.hasZ=!0}(e,i,t)}return e}(e.clone(),this)}on(){return R}projectIfRequired(e,t){return w(e,t)}}class v extends x{constructor(e,t,i){super(),this.tile=e,this.noDataValue=i,this.extent=Object(h.n)(e.tile.extent,t.spatialReference);const n=Object(u.c)(t.spatialReference),s=t.lodAt(e.tile.level).resolution*n;this.demResolution={min:s,max:s}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return Object(d.e)(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent;y.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax})`)}return this.tile.sample(t.x,t.y)}}class T extends x{constructor(e,t,i){let n;super(),\"number\"==typeof t?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(e=>new v(e,n,this.noDataValue)):e;const s=this.samplers[0];if(s){this.extent=s.extent.clone();const{min:e,max:t}=s.demResolution;this.demResolution={min:e,max:t};for(let i=1;i<this.samplers.length;i++){const e=this.samplers[i];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=Object(h.n)(Object(h.d)(),n.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const i of this.samplers)if(i.contains(t))return i.elevationAt(t);return y.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function w(e,t){const i=e.spatialReference;return i.equals(t)?e:Object(m.a)(i,t)?Object(m.d)(e,t):(y.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),null)}const g=new a.a,R={remove(){}};class _{constructor(e,t){if(this.tile=e,!t)return void(this.samplerData=null);const i=this.tile.extent;this.samplerData={pixelData:t.values,width:t.width,height:t.height,safeWidth:.99999999*(t.width-1),noDataValue:t.noDataValue,dx:(t.width-1)/(i[2]-i[0]),dy:(t.width-1)/(i[3]-i[1]),x0:i[0],y1:i[3]}}sample(e,t){if(this.samplerData)return function(e,t,i){const{safeWidth:n,width:s,pixelData:o,noDataValue:a}=e,l=b(e.dy*(e.y1-i),0,n),r=b(e.dx*(t-e.x0),0,n),c=Math.floor(l),u=Math.floor(r),h=c*s+u,p=h+s,f=o[h],m=o[p],d=o[h+1],y=o[p+1];if(f!==a&&m!==a&&d!==a&&y!==a){const e=r-u,t=f+(d-f)*e;return t+(m+(y-m)*e-t)*(l-c)}}(this.samplerData,e,t)}}function b(e,t,i){return e<t?t:e>i?i:e}class E{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new s.a(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const n=q.fromGeometry(t);let o=!1;i&&i.returnSampleInfo||(o=!0);const a={...D,...i,returnSampleInfo:!0},l=await this.query(e[e.length-1],n,a),r=await this._queryAllContinue(e,l,a);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new s.a(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!t||!(t instanceof q)&&\"point\"!==t.type&&\"multipoint\"!==t.type&&\"polyline\"!==t.type)throw new s.a(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const n={...D,...i},o=new O(e,t.spatialReference,n),a=n.signal;return await e.load({signal:a}),await this._createGeometryDescriptor(o,t,a),await this._selectTiles(o,a),await this._populateElevationTiles(o,a),this._sampleGeometryWithElevation(o),this._createQueryResult(o,a)}async createSampler(e,t,i){if(!e)throw new s.a(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!t||\"extent\"!==t.type)throw new s.a(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...D,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(e=>e.visible):e.slice()).length)throw new s.a(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!t||\"extent\"!==t.type)throw new s.a(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...D,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const s=i.signal;await e.load({signal:s});const o=t.spatialReference,a=e.tileInfo.spatialReference;o.equals(a)||(await Object(p.b)([{source:o,dest:a}],{signal:s}),t=Object(p.f)(t,a));const l=new I(e,t,i,n);return await this._selectTiles(l,s),await this._populateElevationTiles(l,s),new T(l.elevationTiles,l.layer.tileInfo,l.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.map(e=>Object(h.h)(e.extent)),o=await this._createSampler(e[e.length-1],t,n,s);if(0===o.samplers.length)return i;const a=i.samplers.concat(o.samplers),l=new T(a,n.noDataValue);return this._createSamplerAllContinue(e,t,l,n)}async _queryAllContinue(e,t,i){const n=e.pop(),s=t.geometry.coordinates,o=[],a=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=n):e.length&&(o.push(s[c]),a.push(c))}if(!e.length||0===o.length)return t;const l=t.geometry.clone(o),r=await this.query(e[e.length-1],l,i);return a.forEach((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(e=>{e.tile=null,e.elevationTile=null}),i}async _createGeometryDescriptor(e,t,i){let n;const o=e.layer.tileInfo.spatialReference;if(t instanceof q?n=await t.project(o,i):(await Object(p.b)([{source:t.spatialReference,dest:o}],{signal:i}),n=Object(p.f)(t,o)),!n)throw new s.a(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=q.fromGeometry(n)}async _selectTiles(e,t){const i=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof i)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===i)await this._selectTilesFinestContiguous(e,t);else{if(\"auto\"!==i)throw new s.a(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${i}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){const t=new _(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(e=>{const n=e.x,s=e.y;(n<i.xmin||n>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)})}_selectTilesClosestResolution(e){const t=this._findNearestDemResolutionLODIndex(e.layer.tileInfo,e.options.demResolution);e.selectTilesAtLOD(t)}_findNearestDemResolutionLODIndex(e,t){const i=t/Object(u.c)(e.spatialReference);let n=e.lods[0],s=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(n.resolution-i)&&(n=t,s=o)}return s}async _selectTilesFinestContiguous(e,t){const i=j(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const a=n.tilemapCache,l=e.getTilesToFetch();try{if(a)await Object(o.z)(Object(o.b)(l.map(e=>a.fetchAvailability(e.level,e.row,e.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new s.a(\"elevation-query:has-unavailable-tiles\")}catch(r){Object(o.v)(r),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},a=e.options.cache,l=e.options.noDataValue,r=i.map(async i=>{const o=`${e.layer.uid}:${i.id}:${l}`,r=Object(n.h)(a)?a.get(o):null,c=Object(n.h)(r)?r:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:l,signal:t});Object(n.h)(a)&&a.put(o,c),s[i.id]=new _(i,c)});await Object(o.z)(Object(o.j)(r),t),e.populateElevationTiles(s)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),s={},a=n.map(async e=>{const n={id:null,level:0,row:0,col:0,extent:Object(h.d)()},a=await Object(c.c)(i.fetchAvailabilityUpsample(e.level,e.row,e.col,n,{signal:t}));!1===a.ok?Object(o.v)(a.error):s[e.id]=n});await Object(o.z)(Object(o.b)(a),t),e.remapTiles(s)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},s=e=>{e.id in n?n[e.id]++:(n[e.id]=1,i++)},o=e=>{const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(s,o);let a=!0;for(;a&&(a=!1,e.forEachTileToFetch(n=>{i<=e.options.maximumAutoTileRequests||(o(n),t.upsampleTile(n)&&(a=!0),s(n))},o),a););}_selectTilesAutoFinest(e){const t=j(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((e,t)=>{i.upsampleTile(e)?n=!0:t()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?n=e:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=Object(u.c)(t.spatialReference);return e.geometry.coordinates.map(n=>{let s=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(s=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:s}})}}class q{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new q;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(e=>this._cloneCoordinate(e)),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await Object(p.b)([{source:this.spatialReference,dest:e}],{signal:t});const i=new l.a({spatialReference:this.spatialReference,points:this.coordinates.map(e=>[e.x,e.y])}),n=Object(p.f)(i,e);if(!n)return null;const s=this.coordinates.map((e,t)=>{const i=this._cloneCoordinate(e),s=n.points[t];return i.x=s[0],i.y=s[1],i}),o=this.clone(s);return o.spatialReference=e,o}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new q;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof q)t.coordinates=e.coordinates.map(e=>t._cloneCoordinate(e)),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:n?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new a.a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a.a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=i.points.map(n&&s?e=>({x:e[0],y:e[1],z:e[2],m:e[3]}):n?e=>({x:e[0],y:e[1],z:e[2]}):s?e=>({x:e[0],y:e[1],m:e[2]}):e=>({x:e[0],y:e[1]})),t._exporter=(t,i)=>e.hasM?new l.a({points:t.map(e=>[e.x,e.y,e.z,e.m]),hasZ:!0,hasM:!0,spatiaReference:i}):new l.a(t.map(e=>[e.x,e.y,e.z]),i);break}case\"polyline\":{const i=e,n=[],s=[],{hasZ:o,hasM:a}=e;let l=0;for(const e of i.paths)if(s.push([l,l+e.length]),l+=e.length,o&&a)for(const t of e)n.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(o)for(const t of e)n.push({x:t[0],y:t[1],z:t[2]});else if(a)for(const t of e)n.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)n.push({x:t[0],y:t[1]});t.coordinates=n,t._exporter=(t,i)=>{const n=t.map(e.hasM?e=>[e.x,e.y,e.z,e.m]:e=>[e.x,e.y,e.z]),o=s.map(e=>n.slice(e[0],e[1]));return new r.a({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class A{constructor(e,t){this.layer=e,this.options=t}}class O extends A{constructor(e,t,i){super(e,i),this.type=\"geometry\",this.outSpatialReference=t}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(e=>e.tile=null);else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(e=>{e.tile=t.tileAt(i,e.x,e.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;i.elevationTile||!i.tile||e[n.id]||(e[n.id]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>t.tile=null)}}class I extends A{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let n=t.lods.length-1;n>=0;n--){const s=t.lods[n],o=s.resolution*t.size[1];if(Math.ceil(i.width/(s.resolution*t.size[0]))*Math.ceil(i.height/o)<=e)return n}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach(i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,()=>n=!0),n?t&&t(i):this.candidateTiles.push(i)}),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const o of e)i[o.id]?t&&t(o):(i[o.id]=o,n.push(o));const s=n.sort((e,t)=>e.level-t.level);return s.filter((e,i)=>{for(let n=0;n<i;n++)if(Object(h.c)(s[n].extent,e.extent))return t&&t(e),!1;return!0})}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],n=this.extent,s=t.tileAt(i.level,n.xmin,n.ymin),o=i.resolution*t.size[1],a=Math.ceil((n.xmax-s.extent[0])/(i.resolution*t.size[0])),l=Math.ceil((n.ymax-s.extent[1])/o);for(let r=0;r<l;r++)for(let e=0;e<a;e++){const i={id:null,level:s.level,row:s.row-r,col:s.col+e};t.updateTileInfo(i),this._tileIsMasked(i)||this.candidateTiles.push(i)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>Object(h.c)(t,e.extent))}}function j(e,t){let i=e.lods.length-1;if(t>0){const n=e.lods.findIndex(e=>e.resolution<t);0===n?i=0:n>0&&(i=n-1)}return i}const D={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};t.default=E}}]);","name":"14.de5862220501c7f88fd9.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[14],{\n\n/***/ \"LfYK\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"ElevationQuery\", function() { return /* binding */ ElevationQuery_v; });\n__webpack_require__.d(__webpack_exports__, \"GeometryDescriptor\", function() { return /* binding */ ElevationQuery_x; });\n__webpack_require__.d(__webpack_exports__, \"getFinestLodIndex\", function() { return /* binding */ E; });\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/maybe.js\nvar maybe = __webpack_require__(\"srIe\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Error.js\nvar Error = __webpack_require__(\"zlDU\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/promiseUtils.js\nvar promiseUtils = __webpack_require__(\"9MzC\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Point.js + 2 modules\nvar Point = __webpack_require__(\"SuVq\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Multipoint.js\nvar Multipoint = __webpack_require__(\"V9wi\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Polyline.js\nvar Polyline = __webpack_require__(\"UhwK\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/asyncUtils.js\nvar asyncUtils = __webpack_require__(\"eSsm\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/unitUtils.js\nvar unitUtils = __webpack_require__(\"gEht\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js\nvar aaBoundingRect = __webpack_require__(\"kYAx\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/projection.js + 4 modules\nvar projection = __webpack_require__(\"gYg2\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/has.js\nvar has = __webpack_require__(\"wSAH\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Logger.js\nvar Logger = __webpack_require__(\"6S2I\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/webMercatorUtils.js\nvar webMercatorUtils = __webpack_require__(\"l4ZG\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/contains.js\nvar contains = __webpack_require__(\"IXLn\");\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry.js\nvar geometry = __webpack_require__(\"4GrV\");\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/ElevationSampler.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nconst ElevationSampler_l=Logger[\"a\" /* default */].getLogger(\"esri.layers.support.ElevationSampler\");class ElevationSampler_c{queryElevation(e){return u(e.clone(),this)}on(){return ElevationSampler_x}projectIfRequired(e,t){return h(e,t)}}class ElevationSampler_m extends ElevationSampler_c{constructor(e,t,n){super(),this.tile=e,this.noDataValue=n,this.extent=Object(aaBoundingRect[\"n\" /* toExtent */])(e.tile.extent,t.spatialReference);const s=Object(unitUtils[\"c\" /* getMetersPerUnitForSR */])(t.spatialReference),i=t.lodAt(e.tile.level).resolution*s;this.demResolution={min:i,max:i}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return Object(contains[\"e\" /* extentContainsPoint */])(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent,n=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;ElevationSampler_l.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${n})`)}return this.tile.sample(t.x,t.y)}}class ElevationSampler_p extends ElevationSampler_c{constructor(e,t,n){let s;super(),\"number\"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new ElevationSampler_m(e,s,this.noDataValue))):e;const i=this.samplers[0];if(i){this.extent=i.extent.clone();const{min:e,max:t}=i.demResolution;this.demResolution={min:e,max:t};for(let e=1;e<this.samplers.length;e++){const t=this.samplers[e];this.extent.union(t.extent),this.demResolution.min=Math.min(this.demResolution.min,t.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,t.demResolution.max)}}else this.extent=Object(aaBoundingRect[\"n\" /* toExtent */])(Object(aaBoundingRect[\"d\" /* create */])(),s.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const e of this.samplers)if(e.contains(t))return e.elevationAt(t);return ElevationSampler_l.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function u(e,t){const n=h(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":!function(e,t,n){e.z=n.elevationAt(t)||0}(e,n,t);break;case\"polyline\":!function(e,t,n){f.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],r=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=r[e];f.x=i[0],f.y=i[1];const a=n.elevationAt(f)||0;s&&(t[3]=t[2]),t[2]=a}}e.hasZ=!0}(e,n,t);break;case\"multipoint\":!function(e,t,n){f.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],r=t.points[i];f.x=r[0],f.y=r[1];const a=n.elevationAt(f)||0;s&&(o[3]=o[2]),o[2]=a}e.hasZ=!0}(e,n,t)}return e}function h(e,s){const i=e.spatialReference;return i.equals(s)?e:Object(webMercatorUtils[\"a\" /* canProject */])(i,s)?Object(webMercatorUtils[\"d\" /* project */])(e,s):(ElevationSampler_l.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${s.wkid})`),null)}const f=new Point[\"a\" /* default */],ElevationSampler_x={remove(){}};\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/ElevationTile.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nclass ElevationTile_t{constructor(t,a){if(this.tile=t,!a)return void(this.samplerData=null);const e=this.tile.extent;this.samplerData={pixelData:a.values,width:a.width,height:a.height,safeWidth:.99999999*(a.width-1),noDataValue:a.noDataValue,dx:(a.width-1)/(e[2]-e[0]),dy:(a.width-1)/(e[3]-e[1]),x0:e[0],y1:e[3]}}sample(t,e){if(this.samplerData)return function(t,e,i){const{safeWidth:h,width:r,pixelData:s,noDataValue:l}=t,n=ElevationTile_a(t.dy*(t.y1-i),0,h),o=ElevationTile_a(t.dx*(e-t.x0),0,h),d=Math.floor(n),u=Math.floor(o),f=d*r+u,p=f+r,x=s[f],D=s[p],c=s[f+1],w=s[p+1];if(x!==l&&D!==l&&c!==l&&w!==l){const t=o-u,a=x+(c-x)*t;return a+(D+(w-D)*t-a)*(n-d)}return}(this.samplerData,t,e)}}function ElevationTile_a(t,a,e){return t<a?a:t>e?e:t}/* harmony default export */ var ElevationTile = (ElevationTile_t);\n\n// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/ElevationQuery.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nclass ElevationQuery_v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new Error[\"a\" /* default */](\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=ElevationQuery_x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new Error[\"a\" /* default */](\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof ElevationQuery_x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new Error[\"a\" /* default */](\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new Error[\"a\" /* default */](\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new Error[\"a\" /* default */](\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new Error[\"a\" /* default */](\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new Error[\"a\" /* default */](\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await Object(projection[\"b\" /* initializeProjection */])([{source:l,dest:n}],{signal:s}),t=Object(projection[\"f\" /* project */])(t,n));const a=new ElevationQuery_(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new ElevationSampler_p(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>Object(aaBoundingRect[\"h\" /* fromExtent */])(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new ElevationSampler_p(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let i=0;i<s.length;i++){const a=t.sampleInfo[i];a.demResolution>=0?a.source||(a.source=o):e.length&&(l.push(s[i]),n.push(i))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof ElevationQuery_x?s=await i.project(l,o):(await Object(projection[\"b\" /* initializeProjection */])([{source:i.spatialReference,dest:l}],{signal:o}),s=Object(projection[\"f\" /* project */])(i,l)),!s)throw new Error[\"a\" /* default */](\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=ElevationQuery_x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new Error[\"a\" /* default */](\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){const t=new ElevationTile_t(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const o=e.x,s=e.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/Object(unitUtils[\"c\" /* getMetersPerUnitForSR */])(e.spatialReference);let o=e.lods[0],s=0;for(let t=1;t<e.lods.length;t++){const l=e.lods[t];Math.abs(l.resolution-i)<Math.abs(o.resolution-i)&&(o=l,s=t)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,l,n){const a=e.layer;if(e.selectTilesAtLOD(l),l<0)return;const r=a.tilemapCache,c=e.getTilesToFetch();try{if(r)await Object(promiseUtils[\"z\" /* whenOrAbort */])(Object(promiseUtils[\"b\" /* all */])(c.map((e=>r.fetchAvailability(e.level,e.row,e.col,{signal:n})))),n);else if(await this._populateElevationTiles(e,n),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new Error[\"a\" /* default */](\"elevation-query:has-unavailable-tiles\")}catch(t){Object(promiseUtils[\"v\" /* throwIfAbortError */])(t),await this._selectTilesFinestContiguousAt(e,l-1,n)}}async _populateElevationTiles(t,o){const s=t.getTilesToFetch(),n={},a=t.options.cache,r=t.options.noDataValue,c=s.map((async i=>{const s=`${t.layer.uid}:${i.id}:${r}`,l=Object(maybe[\"h\" /* isSome */])(a)?a.get(s):null,c=Object(maybe[\"h\" /* isSome */])(l)?l:await t.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:o});Object(maybe[\"h\" /* isSome */])(a)&&a.put(s,c),n[i.id]=new ElevationTile_t(i,c)}));await Object(promiseUtils[\"z\" /* whenOrAbort */])(Object(promiseUtils[\"j\" /* eachAlways */])(c),o),t.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const l=e.layer.tilemapCache;if(!l)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),a={},r=n.map((async e=>{const i={id:null,level:0,row:0,col:0,extent:Object(aaBoundingRect[\"d\" /* create */])()},o=await Object(asyncUtils[\"c\" /* result */])(l.fetchAvailabilityUpsample(e.level,e.row,e.col,i,{signal:t}));!1===o.ok?Object(promiseUtils[\"v\" /* throwIfAbortError */])(o.error):a[e.id]=i}));await Object(promiseUtils[\"z\" /* whenOrAbort */])(Object(promiseUtils[\"b\" /* all */])(r),t),e.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let o=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?o=e:t.elevationTile=null}t.z=o}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=Object(unitUtils[\"c\" /* getMetersPerUnitForSR */])(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class ElevationQuery_x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new ElevationQuery_x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await Object(projection[\"b\" /* initializeProjection */])([{source:this.spatialReference,dest:e}],{signal:t});const i=new Multipoint[\"a\" /* default */]({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=Object(projection[\"f\" /* project */])(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new ElevationQuery_x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof ElevationQuery_x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new Point[\"a\" /* default */](t[0].x,t[0].y,t[0].z,t[0].m,i):new Point[\"a\" /* default */](t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new Multipoint[\"a\" /* default */]({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new Multipoint[\"a\" /* default */](t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new Polyline[\"a\" /* default */]({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.type=\"geometry\",this.outSpatialReference=t}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class ElevationQuery_ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let o=t.lods.length-1;o>=0;o--){const s=t.lods[o],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(i.width/l)*Math.ceil(i.height/n)<=e)return o}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const s of e)i[s.id]?t&&t(s):(i[s.id]=s,o.push(s));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(Object(aaBoundingRect[\"c\" /* contains */])(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],o=this.extent,s=t.tileAt(i.level,o.xmin,o.ymin),l=i.resolution*t.size[0],n=i.resolution*t.size[1],a=Math.ceil((o.xmax-s.extent[0])/l),r=Math.ceil((o.ymax-s.extent[1])/n);for(let e=0;e<r;e++)for(let i=0;i<a;i++){const o={id:null,level:s.level,row:s.row-e,col:s.col+i};t.updateTileInfo(o),this._tileIsMasked(o)||this.candidateTiles.push(o)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>Object(aaBoundingRect[\"c\" /* contains */])(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};/* harmony default export */ var ElevationQuery = __webpack_exports__[\"default\"] = (ElevationQuery_v);\n\n\n/***/ })\n\n}]);","inputSourceMap":null}