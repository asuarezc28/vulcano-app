(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"1E6V":function(e,t,r){"use strict";r.r(t);var n=r("pO5D"),i=(r("wSAH"),r("6S2I"),r("zqDF")),s=r("WbKI"),o=r("04ZG"),a=r("4EHJ"),c=(r("ju1D"),r("9AIY"),r("kglp")),O=r("Lqtk"),l=r("u3Ia"),u=r("Ehki"),f=(r("4GrV"),r("qatw"));function N(e){return{geometryType:Object(f.c)(e[0]),geometries:e.map(e=>e.toJSON())}}function p(e,t,r){const n=Object(f.b)(t);return e.map(e=>{const t=n.fromJSON(e);return t.spatialReference=r,t})}var y=r("+opI");const j=new y.a({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),b=new y.a({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});var m=r("ag7Y");let d=class extends m.a{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],d.prototype,"deviationUnit",void 0),Object(n.a)([Object(s.b)({json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.geometries=e.map(e=>e.toJSON())}}}})],d.prototype,"geometries",void 0),Object(n.a)([Object(s.b)({type:Number,json:{write:!0}})],d.prototype,"maxDeviation",void 0),d=Object(n.a)([Object(o.a)("esri.tasks.support.GeneralizeParameters")],d),d.from=Object(i.m)(d);var I=d;const g=new y.a({preserveShape:"preserve-shape"});var T=r("UhwK");let S=class extends m.a{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],S.prototype,"calculationType",void 0),Object(n.a)([Object(s.b)({type:Boolean,json:{write:!0}})],S.prototype,"geodesic",void 0),Object(n.a)([Object(s.b)({json:{write:!0}})],S.prototype,"lengthUnit",void 0),Object(n.a)([Object(s.b)({type:[T.a],json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.polylines=e.map(e=>e.toJSON())}}}})],S.prototype,"polylines",void 0),S=Object(n.a)([Object(o.a)("esri.tasks.support.LengthsParameters")],S),S.from=Object(i.m)(S);var _=S;const R=new y.a({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),h=new y.a({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let U=class extends m.a{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};Object(n.a)([Object(s.b)({type:Number,json:{write:!0}})],U.prototype,"bevelRatio",void 0),Object(n.a)([Object(s.b)({json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.geometries=e.map(e=>e.toJSON())}}}})],U.prototype,"geometries",void 0),Object(n.a)([Object(s.b)({type:Number,json:{write:!0}})],U.prototype,"offsetDistance",void 0),Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],U.prototype,"offsetHow",void 0),Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],U.prototype,"offsetUnit",void 0),U=Object(n.a)([Object(o.a)("esri.tasks.support.OffsetParameters")],U),U.from=Object(i.m)(U);var E=U,A=r("ACSY");const J=Object(i.m)(A.a),w=new y.a({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let v=class extends m.a{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};Object(n.a)([Object(s.b)({json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.geometries1=e.map(e=>e.toJSON())}}}})],v.prototype,"geometries1",void 0),Object(n.a)([Object(s.b)({json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.geometries2=e.map(e=>e.toJSON())}}}})],v.prototype,"geometries2",void 0),Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],v.prototype,"relation",void 0),Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],v.prototype,"relationParameter",void 0),v=Object(n.a)([Object(o.a)("esri.tasks.support.RelationParameters")],v),v.from=Object(i.m)(v);var D=v;const L=new y.a({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let C=class extends m.a{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};Object(n.a)([Object(s.b)({type:String,json:{write:!0}})],C.prototype,"extendHow",void 0),Object(n.a)([Object(s.b)({type:[T.a],json:{read:{reader:e=>e?e.map(e=>Object(f.a)(e)):null},write:{writer:(e,t)=>{t.polylines=e.map(e=>e.toJSON())}}}})],C.prototype,"polylines",void 0),Object(n.a)([Object(s.b)({json:{read:{reader:e=>e?Object(f.a)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],C.prototype,"trimExtendTo",void 0),C=Object(n.a)([Object(o.a)("esri.tasks.support.TrimExtendParameters")],C),C.from=Object(i.m)(C);var M=C;let q=class extends c.a{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=Object(l.c)(e),i={...n.query,f:"json",...t.toJSON()},s=Object(l.a)(i,r);return Object(O.default)(n.path+"/areasAndLengths",s).then(e=>e.data)}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const i=t[0].spatialReference,s=Object(l.c)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify(N(t).geometries),polylines:JSON.stringify(N(r).geometries)},a=Object(l.a)(o,n);return Object(O.default)(s.path+"/autoComplete",a).then(({data:e})=>(e.geometries||[]).map(({rings:e})=>new u.a({spatialReference:i,rings:e})))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=Object(l.c)(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference||t.geometries[0].spatialReference,o=Object(l.a)(i,r);return Object(O.default)(n.path+"/buffer",o).then(e=>(e.data.geometries||[]).map(({rings:e})=>new u.a({spatialReference:s,rings:e})))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,i=Object(l.c)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(N(t))},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/convexHull",o).then(({data:e})=>Object(f.a)(e.geometry).set({spatialReference:n}))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const i=Object(l.c)(e),s=t[0].spatialReference,o={...n,query:{...i.query,f:"json",sr:JSON.stringify(s),target:JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},a=await Object(O.default)(i.path+"/cut",o),{cutIndexes:c,geometries:u=[]}=a.data;return{cutIndexes:c,geometries:u.map(e=>{const t=Object(f.a)(e);return t.spatialReference=s,t})}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,i=Object(l.c)(e),s={...i.query,f:"json",...t.toJSON()},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/densify",o).then(({data:e})=>(e.geometries||[]).map(e=>Object(f.a)(e).set({spatialReference:n})))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const i=t[0].spatialReference,s=Object(l.c)(e);let o={query:{...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(N(t)),geometry:JSON.stringify({geometryType:Object(f.c)(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),Object(O.default)(s.path+"/difference",o).then(({data:e})=>(e.geometries||[]).map(e=>Object(f.a)(e).set({spatialReference:i})))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=Object(l.c)(e),i={...n.query,f:"json",...t.toJSON()},s=Object(l.a)(i,r);return Object(O.default)(n.path+"/distance",s).then(({data:e})=>e&&e.distance)}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};n.sr=null!=t.sr&&"object"==typeof t.sr?t.sr.wkid||JSON.stringify(t.sr):t.sr,n.strings=JSON.stringify(t.strings),n.conversionType=j.toJSON(t.conversionType||"mgrs"),n.conversionMode=t.conversionMode;const i=Object(l.c)(e),s={...i.query,f:"json",...n},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/fromGeoCoordinateString",o).then(({data:e})=>e.coordinates)}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=I.from(t)).toJSON(),i=function(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),i={maxDeviation:n};return t&&t.length&&(i.geometries=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),i.sr=JSON.stringify(t[0].spatialReference)),b.write(r,i,"deviationUnit"),i}(t),s=Object(l.c)(e),o={...s.query,f:"json",...i},a=n.geometries[0].spatialReference,c=Object(l.a)(o,r);return Object(O.default)(s.path+"/generalize",c).then(({data:e})=>(e.geometries||[]).map(e=>Object(f.a)(e).set({spatialReference:a})))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const i=t[0].spatialReference,s=Object(l.c)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(N(t)),geometry:JSON.stringify({geometryType:Object(f.c)(r),geometry:r.toJSON()})},a=Object(l.a)(o,n);return Object(O.default)(s.path+"/intersect",a).then(({data:e})=>(e.geometries||[]).map(e=>Object(f.a)(e).set({spatialReference:i})))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map(e=>e.toJSON()),i=t[0].spatialReference,s=Object(l.c)(e),o={...s.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(n)},a=Object(l.a)(o,r);return Object(O.default)(s.path+"/labelPoints",a).then(({data:e})=>(e.labelPoints||[]).map(e=>Object(f.a)(e).set({spatialReference:i})))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){const n=function(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:i}=e.toJSON(),s={};s.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return s.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(s.lengthUnit=r),n&&(s.geodesic=n),i&&(s.calculationType=g.toJSON(i)),s}(t=_.from(t)),i=Object(l.c)(e),s={...i.query,f:"json",...n},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/lengths",o).then(({data:e})=>e)}(this.url,e,t)}offset(e,t){return async function(e,t,r){const n=function(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:i,offsetUnit:s}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),i&&(o.offsetHow=R.toJSON(i)),s&&(o.offsetUnit=h.toJSON(s)),o}(t=E.from(t)),i=Object(l.c)(e),s={...i.query,f:"json",...n},o=t.geometries[0].spatialReference,a=Object(l.a)(s,r);return Object(O.default)(i.path+"/offset",a).then(({data:e})=>(e.geometries||[]).map(e=>Object(f.a)(e).set({spatialReference:o})))}(this.url,e,t)}project(e,t){return async function(e,t,r){t=J(t);const n=Object(l.c)(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference,o=Object(f.c)(t.geometries[0]),a=Object(l.a)(i,r);return Object(O.default)(n.path+"/project",a).then(({data:{geometries:e}})=>p(e,o,s))}(this.url,e,t)}relation(e,t){return async function(e,t,r){const n=function(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:i}=e.toJSON(),s={};if(t&&t.length){s.geometries1=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t});const e=t[0].spatialReference;s.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(s.geometries2=JSON.stringify({geometryType:Object(f.c)(r[0]),geometries:r})),n&&(s.relation=w.toJSON(n)),i&&(s.relationParam=i),s}(t=D.from(t)),i=Object(l.c)(e),s={...i.query,f:"json",...n},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/relation",o).then(({data:e})=>e.relations)}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const i=t.spatialReference,s=Object(l.c)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:Object(f.c)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},a=Object(l.a)(o,n);return Object(O.default)(s.path+"/reshape",a).then(({data:e})=>Object(f.a)(e.geometry).set({spatialReference:i}))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?Object(a.I)(e):e,i=t[0].spatialReference,s=Object(f.c)(t[0]),o={...r,query:{...n.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify(N(t))}},{data:c}=await Object(O.default)(n.path+"/simplify",o);return p(c.geometries,s,i)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};n.sr=null!=t.sr&&"object"==typeof t.sr?t.sr.wkid||JSON.stringify(t.sr):t.sr,n.coordinates=JSON.stringify(t.coordinates),n.conversionType=j.toJSON(t.conversionType||"mgrs"),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const i=Object(l.c)(e),s={...i.query,f:"json",...n},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/toGeoCoordinateString",o).then(({data:e})=>e.strings)}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){const n=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),i={};return i.extendHow=L.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),n&&(i.trimExtendTo=JSON.stringify(n)),i}(t=M.from(t)),i=Object(l.c)(e),s={...i.query,f:"json",...n},o=t.sr,a=Object(l.a)(s,r);return Object(O.default)(i.path+"/trimExtend",a).then(({data:e})=>(e.geometries||[]).map(({paths:e})=>new T.a({spatialReference:o,paths:e})))}(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,i=Object(l.c)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(N(t))},o=Object(l.a)(s,r);return Object(O.default)(i.path+"/union",o).then(({data:e})=>Object(f.a)(e.geometry).set({spatialReference:n}))}(this.url,e,t)}};q.UNIT_METER=9001,q.UNIT_GERMAN_METER=9031,q.UNIT_FOOT=9002,q.UNIT_SURVEY_FOOT=9003,q.UNIT_CLARKE_FOOT=9005,q.UNIT_FATHOM=9014,q.UNIT_NAUTICAL_MILE=9030,q.UNIT_SURVEY_CHAIN=9033,q.UNIT_SURVEY_LINK=9034,q.UNIT_SURVEY_MILE=9035,q.UNIT_KILOMETER=9036,q.UNIT_CLARKE_YARD=9037,q.UNIT_CLARKE_CHAIN=9038,q.UNIT_CLARKE_LINK=9039,q.UNIT_SEARS_YARD=9040,q.UNIT_SEARS_FOOT=9041,q.UNIT_SEARS_CHAIN=9042,q.UNIT_SEARS_LINK=9043,q.UNIT_BENOIT_1895A_YARD=9050,q.UNIT_BENOIT_1895A_FOOT=9051,q.UNIT_BENOIT_1895A_CHAIN=9052,q.UNIT_BENOIT_1895A_LINK=9053,q.UNIT_BENOIT_1895B_YARD=9060,q.UNIT_BENOIT_1895B_FOOT=9061,q.UNIT_BENOIT_1895B_CHAIN=9062,q.UNIT_BENOIT_1895B_LINK=9063,q.UNIT_INDIAN_FOOT=9080,q.UNIT_INDIAN_1937_FOOT=9081,q.UNIT_INDIAN_1962_FOOT=9082,q.UNIT_INDIAN_1975_FOOT=9083,q.UNIT_INDIAN_YARD=9084,q.UNIT_INDIAN_1937_YARD=9085,q.UNIT_INDIAN_1962_YARD=9086,q.UNIT_INDIAN_1975_YARD=9087,q.UNIT_FOOT_1865=9070,q.UNIT_RADIAN=9101,q.UNIT_DEGREE=9102,q.UNIT_ARCMINUTE=9103,q.UNIT_ARCSECOND=9104,q.UNIT_GRAD=9105,q.UNIT_GON=9106,q.UNIT_MICRORADIAN=9109,q.UNIT_ARCMINUTE_CENTESIMAL=9112,q.UNIT_ARCSECOND_CENTESIMAL=9113,q.UNIT_MIL6400=9114,q.UNIT_BRITISH_1936_FOOT=9095,q.UNIT_GOLDCOAST_FOOT=9094,q.UNIT_INTERNATIONAL_CHAIN=109003,q.UNIT_INTERNATIONAL_LINK=109004,q.UNIT_INTERNATIONAL_YARD=109001,q.UNIT_STATUTE_MILE=9093,q.UNIT_SURVEY_YARD=109002,q.UNIT_50KILOMETER_LENGTH=109030,q.UNIT_150KILOMETER_LENGTH=109031,q.UNIT_DECIMETER=109005,q.UNIT_CENTIMETER=109006,q.UNIT_MILLIMETER=109007,q.UNIT_INTERNATIONAL_INCH=109008,q.UNIT_US_SURVEY_INCH=109009,q.UNIT_INTERNATIONAL_ROD=109010,q.UNIT_US_SURVEY_ROD=109011,q.UNIT_US_NAUTICAL_MILE=109012,q.UNIT_UK_NAUTICAL_MILE=109013,q.UNIT_SQUARE_INCHES="esriSquareInches",q.UNIT_SQUARE_FEET="esriSquareFeet",q.UNIT_SQUARE_YARDS="esriSquareYards",q.UNIT_ACRES="esriAcres",q.UNIT_SQUARE_MILES="esriSquareMiles",q.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",q.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",q.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",q.UNIT_SQUARE_METERS="esriSquareMeters",q.UNIT_ARES="esriAres",q.UNIT_HECTARES="esriHectares",q.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",Object(n.a)([Object(s.b)()],q.prototype,"url",void 0),q=Object(n.a)([Object(o.a)("esri.tasks.GeometryService")],q),t.default=q},u3Ia:function(e,t,r){"use strict";r.d(t,"a",function(){return i}),r.d(t,"b",function(){return o}),r.d(t,"c",function(){return s});var n=r("4EHJ");function i(e,t){let r={query:e};return t&&(r={...t,...r}),r}function s(e){return"string"==typeof e?Object(n.I)(e):e}function o(e,t,r){const n={};for(const i in e){if("declaredClass"===i)continue;const s=e[i];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){n[i]=[];for(let e=0;e<s.length;e++)n[i][e]=o(s[e])}else if("object"==typeof s)if(s.toJSON){const e=s.toJSON(r&&r[i]);n[i]=t?e:JSON.stringify(e)}else n[i]=t?s:JSON.stringify(s);else n[i]=s}return n}}}]);